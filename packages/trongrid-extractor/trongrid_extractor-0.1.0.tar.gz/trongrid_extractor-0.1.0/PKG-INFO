Metadata-Version: 2.1
Name: trongrid-extractor
Version: 0.1.0
Summary: Extract transactions from the Trongrid API.
Author: Your Name
Author-email: you@example.com
Requires-Python: >=3.10,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: base58 (>=2.1.1,<3.0.0)
Requires-Dist: pendulum (>=2.1.2,<3.0.0)
Requires-Dist: requests (>=2.31.0,<3.0.0)
Requires-Dist: rich (>=13.4.1,<14.0.0)
Requires-Dist: tenacity (>=8.2.2,<9.0.0)
Description-Content-Type: text/markdown

[Trongrid API documentation](https://developers.tron.network/v4.0/reference/note)

`events_for_token()` can pull all transfers for a given `contract_address`.

Set `LOG_LEVEL=DEBUG` to get debug logging.

# Usage
```sh
extract_tron_transactions  --until 2023-06-26T16:07:39+00:00 TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t
```

## Example transaction info by contract address response
In docs it's Contracts/Get transaction info...: https://developers.tron.network/v4.0/reference/testinput

```json
{
    "ret": [
        {
        "contractRet": "SUCCESS"
        }
    ],
    "signature": [
        "cb7c1b0ae95c7efa3288191e4e4233c7c1126f670512fa3420ee0c2f128f3ec7b6d56a43e27d0f043bb51fb50213b6b2c3d344a159f483552b04f17c1be21b0b00"
    ],
    "txID": "41c6b40061b191eb506787bf00ac7bd706cb7115c27612040d89dc0ca81c97fa",
    "net_usage": 0,
    "raw_data_hex": "0a028b672208fe4ef86f9082545340d8aeb38289315acf01081f12ca010a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e74726163741294010a1541786c5f52ef0d3ef6f2b2851fb710cabc1697bc47121541a614f803b6fd780986a42c78ec9c7f77e6ded13c226423b872dd00000000000000000000004132db5a74e91e1ca1c80391b411d5f459bc5451470000000000000000000000418e880fdfc1708e30f48a7c52175b10e67273e64f000000000000000000000000000000000000000000000000000000000000000070eef1af828931900180e1eb17",
    "net_fee": 378000,
    "energy_usage": 44228,
    "block_timestamp": "1686048084000",
    "blockNumber": "51809148",
    "energy_fee": 0,
    "energy_usage_total": 44228,
    "raw_data": {
        "contract": [
        {
            "parameter": {
            "value": {
                "data": "23b872dd00000000000000000000004132db5a74e91e1ca1c80391b411d5f459bc5451470000000000000000000000418e880fdfc1708e30f48a7c52175b10e67273e64f0000000000000000000000000000000000000000000000000000000000000000",
                "owner_address": "41786c5f52ef0d3ef6f2b2851fb710cabc1697bc47",
                "contract_address": "41a614f803b6fd780986a42c78ec9c7f77e6ded13c"
            },
            "type_url": "type.googleapis.com/protocol.TriggerSmartContract"
            },
            "type": "TriggerSmartContract"
        }
        ],
        "ref_block_bytes": "8b67",
        "ref_block_hash": "fe4ef86f90825453",
        "expiration": 1686048135000,
        "fee_limit": 50000000,
        "timestamp": 1686048078062
    },
    "internal_transactions": []
}
```


# Contributing
This project was developed with `poetry` and as such is probably easier to work with using `poetry` to manage dependencies in the dev environment. Install with:
```
poetry install --with=dev
```

## Publishing to PyPi
1. `poetry config repositories.chain_argos_pypi https://upload.pypi.org/legacy/`
2. `poetry config pypi-token.chain_argos_pypi [API_TOKEN]`
3. `poetry publish --build --repository chain_argos_pypi`

