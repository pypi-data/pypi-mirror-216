{"version":3,"sources":["AntStatistic.tsx","index.tsx"],"names":["withStreamlitConnection","props","args","title","value","prefix","suffix","precision","loading","decimalSeperator","groupSeperator","valueStyle","titleStyle","cardStyle","card","height","loadingAnimation","loadingDuration","card_bordered","card_hoverable","classStatistic","classTitle","classCard","formatter","React","createElement","CountUp","end","separator","decimals","duration","useEffect","Streamlit","setFrameHeight","setComponentReady","Card","style","bordered","hoverable","className","Helmet","src","crossOrigin","id","Statistic","dangerouslySetInnerHTML","__html","decimalSeparator","groupSeparator","Fragment","ReactDOM","render","StrictMode","StatisticComponent","document","getElementById"],"mappings":"sPAoIeA,eAtGY,SAACC,GAC1B,IAAQC,EAASD,EAATC,KAGNC,EAoBkBD,EApBlBC,MACAC,EAmBkBF,EAnBlBE,MACAC,EAkBkBH,EAlBlBG,OACAC,EAiBkBJ,EAjBlBI,OACAC,EAgBkBL,EAhBlBK,UACAC,EAekBN,EAflBM,QACAC,EAckBP,EAdlBO,iBACAC,EAakBR,EAblBQ,eACAC,EAYkBT,EAZlBS,WACAC,EAWkBV,EAXlBU,WACAC,EAUkBX,EAVlBW,UACAC,EASkBZ,EATlBY,KACAC,EAQkBb,EARlBa,OACAC,EAOkBd,EAPlBc,iBACAC,EAMkBf,EANlBe,gBACAC,EAKkBhB,EALlBgB,cACAC,EAIkBjB,EAJlBiB,eACAC,EAGkBlB,EAHlBkB,eACAC,EAEkBnB,EAFlBmB,WACAC,EACkBpB,EADlBoB,UAGIC,EAAY,SAACnB,GACjB,MAAqB,kBAAVA,EACFA,EACEY,EAEPQ,IAAAC,cAACC,IAAO,CACNC,IAAKvB,EACLwB,UAAWlB,EACXmB,SAAUtB,EACVuB,SAAUb,IAIPb,GAUX,OALA2B,qBAAU,WACRC,IAAUC,eAAelB,GACzBiB,IAAUE,sBACT,CAACnB,IAEAD,EAEAU,IAAAC,cAACU,IAAI,CAACC,MAAOvB,EAAWwB,SAAUnB,EAAeoB,UAAWnB,EAAgBoB,UAAWjB,GACrFE,IAAAC,cAACe,IAAM,KACLhB,IAAAC,cAAA,UACEgB,IAAI,4CACJC,YAAY,YACZC,GAAG,wBAGPnB,IAAAC,cAACmB,IAAS,CACRL,UAAWnB,EACXjB,MAAOqB,IAAAC,cAAA,OAAKc,UAAWlB,EAAYwB,wBAAyB,CAACC,OAAQ3C,GAAQiC,MAAOxB,IACpFR,MAAOA,EACPC,OAAQA,GAAUmB,IAAAC,cAAA,OAAKoB,wBAAyB,CAACC,OAAQzC,KACzDC,OAAQA,GAAUkB,IAAAC,cAAA,OAAKoB,wBAAyB,CAACC,OAAQxC,KACzDC,UAAWA,EACXC,QAASA,EACTuC,iBAAkBtC,EAClBuC,eAAgBtC,EAChBC,WAAYA,EACZY,UAAWA,KAMfC,IAAAC,cAAAD,IAAAyB,SAAA,KACAzB,IAAAC,cAACe,IAAM,KACHhB,IAAAC,cAAA,UACEgB,IAAI,4CACJC,YAAY,YACZC,GAAG,wBAGPnB,IAAAC,cAACmB,IAAS,CACVL,UAAWnB,EACXjB,MAAOqB,IAAAC,cAAA,OAAKc,UAAWlB,EAAYwB,wBAAyB,CAACC,OAAQ3C,GAAQiC,MAAOxB,IACpFR,MAAOA,EACPC,OAAQA,GAAUmB,IAAAC,cAAA,OAAKoB,wBAAyB,CAACC,OAAQzC,KACzDC,OAAQA,GAAUkB,IAAAC,cAAA,OAAKoB,wBAAyB,CAACC,OAAQxC,KACzDC,UAAWA,EACXC,QAASA,EACTuC,iBAAkBtC,EAClBuC,eAAgBtC,EAChBC,WAAYA,EACZY,UAAWA,QCpHnB2B,IAASC,OACP3B,IAAAC,cAACD,IAAM4B,WAAU,KACf5B,IAAAC,cAAC4B,EAAkB,OAErBC,SAASC,eAAe,W","file":"static/js/main.d7dba045.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Statistic, Card } from 'antd';\r\nimport CountUp from 'react-countup';\r\nimport { ComponentProps, Streamlit, withStreamlitConnection } from \"streamlit-component-lib\";\r\nimport { Helmet } from 'react-helmet';\r\n\r\ninterface StatisticProps {\r\n  title: string,\r\n  value: string | number,\r\n  prefix: string,\r\n  suffix: string,\r\n  precision: number,\r\n  loading: boolean,\r\n  decimalSeperator: string,\r\n  groupSeperator: string,\r\n  valueStyle: object,\r\n  titleStyle: object,\r\n  cardStyle: object,\r\n  card: boolean,\r\n  key: string,\r\n  height: number,\r\n  loadingAnimation: boolean,\r\n  loadingDuration: number,\r\n  card_bordered: boolean,\r\n  card_hoverable: boolean,\r\n  classStatistic: string,\r\n  classTitle: string,\r\n  classCard: string,\r\n}\r\n\r\nconst StatisticComponent = (props: ComponentProps) => {\r\n  const { args } = props;\r\n\r\n  const {\r\n    title,\r\n    value,\r\n    prefix,\r\n    suffix,\r\n    precision,\r\n    loading,\r\n    decimalSeperator,\r\n    groupSeperator,\r\n    valueStyle,\r\n    titleStyle,\r\n    cardStyle,\r\n    card,\r\n    height,\r\n    loadingAnimation,\r\n    loadingDuration,\r\n    card_bordered,\r\n    card_hoverable,\r\n    classStatistic,\r\n    classTitle,\r\n    classCard\r\n  }: StatisticProps = args;\r\n\r\n  const formatter = (value: number | string) => {\r\n    if (typeof value === 'string') {\r\n      return value;\r\n    } else if (loadingAnimation) {\r\n      return (\r\n        <CountUp\r\n          end={value}\r\n          separator={groupSeperator}\r\n          decimals={precision}\r\n          duration={loadingDuration}\r\n        />\r\n      );\r\n    } else {\r\n      return value;\r\n    }\r\n  };\r\n\r\n  // Send back a response to Streamlit\r\n  useEffect(() => {\r\n    Streamlit.setFrameHeight(height);\r\n    Streamlit.setComponentReady();\r\n  }, [height]);\r\n\r\n  if (card) {\r\n    return (\r\n      <Card style={cardStyle} bordered={card_bordered} hoverable={card_hoverable} className={classCard}>\r\n        <Helmet>\r\n          <script\r\n            src=\"https://kit.fontawesome.com/c7cbba6207.js\"\r\n            crossOrigin=\"anonymous\"\r\n            id=\"font-awesome-icons\"\r\n          />\r\n        </Helmet>\r\n        <Statistic\r\n          className={classStatistic}\r\n          title={<div className={classTitle} dangerouslySetInnerHTML={{__html: title}} style={titleStyle} />}\r\n          value={value} // casting to any type\r\n          prefix={prefix && <div dangerouslySetInnerHTML={{__html: prefix}} />}\r\n          suffix={suffix && <div dangerouslySetInnerHTML={{__html: suffix}} />}\r\n          precision={precision}\r\n          loading={loading}\r\n          decimalSeparator={decimalSeperator}\r\n          groupSeparator={groupSeperator}\r\n          valueStyle={valueStyle}\r\n          formatter={formatter}\r\n        />\r\n      </Card>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n      <Helmet>\r\n          <script\r\n            src=\"https://kit.fontawesome.com/c7cbba6207.js\"\r\n            crossOrigin=\"anonymous\"\r\n            id=\"font-awesome-icons\"\r\n          />\r\n        </Helmet>\r\n        <Statistic\r\n        className={classStatistic}\r\n        title={<div className={classTitle} dangerouslySetInnerHTML={{__html: title}} style={titleStyle} />}\r\n        value={value} // casting to any type\r\n        prefix={prefix && <div dangerouslySetInnerHTML={{__html: prefix}} />}\r\n        suffix={suffix && <div dangerouslySetInnerHTML={{__html: suffix}} />}\r\n        precision={precision}\r\n        loading={loading}\r\n        decimalSeparator={decimalSeperator}\r\n        groupSeparator={groupSeperator}\r\n        valueStyle={valueStyle}\r\n        formatter={formatter}\r\n      />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withStreamlitConnection(StatisticComponent);","\r\nimport React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport StatisticComponent from \"./AntStatistic\"\r\n\r\n// Lots of import to define a Styletron engine and load the light theme of baseui\r\n\r\n\r\n// Wrap your CustomSlider with the baseui them\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StatisticComponent />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)"],"sourceRoot":""}