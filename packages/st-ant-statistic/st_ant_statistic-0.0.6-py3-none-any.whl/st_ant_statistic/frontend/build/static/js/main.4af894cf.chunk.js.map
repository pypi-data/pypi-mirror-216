{"version":3,"sources":["AntStatistic.tsx","index.tsx"],"names":["withStreamlitConnection","props","args","title","value","prefix","suffix","precision","loading","decimalSeperator","groupSeperator","valueStyle","titleStyle","cardStyle","card","height","loadingAnimation","loadingDuration","card_bordered","card_hoverable","classStatistic","classTitle","classCard","alignValue","alignTitle","formatter","React","createElement","CountUp","end","separator","decimals","duration","Number","toFixed","useEffect","Streamlit","setFrameHeight","setComponentReady","Card","style","bordered","hoverable","className","Helmet","src","crossOrigin","id","Statistic","dangerouslySetInnerHTML","__html","decimalSeparator","groupSeparator","_objectSpread","textAlign","Fragment","ReactDOM","render","StrictMode","StatisticComponent","document","getElementById"],"mappings":"8PA8IeA,eA9GY,SAACC,GAC1B,IAAQC,EAASD,EAATC,KAGNC,EAsBkBD,EAtBlBC,MACAC,EAqBkBF,EArBlBE,MACAC,EAoBkBH,EApBlBG,OACAC,EAmBkBJ,EAnBlBI,OACAC,EAkBkBL,EAlBlBK,UACAC,EAiBkBN,EAjBlBM,QACAC,EAgBkBP,EAhBlBO,iBACAC,EAekBR,EAflBQ,eACAC,EAckBT,EAdlBS,WACAC,EAakBV,EAblBU,WACAC,EAYkBX,EAZlBW,UACAC,EAWkBZ,EAXlBY,KACAC,EAUkBb,EAVlBa,OACAC,EASkBd,EATlBc,iBACAC,EAQkBf,EARlBe,gBACAC,EAOkBhB,EAPlBgB,cACAC,EAMkBjB,EANlBiB,eACAC,EAKkBlB,EALlBkB,eACAC,EAIkBnB,EAJlBmB,WACAC,EAGkBpB,EAHlBoB,UACAC,EAEkBrB,EAFlBqB,WACAC,EACkBtB,EADlBsB,WAGIC,EAAY,SAACrB,GACjB,MAAqB,kBAAVA,EACFA,EACEY,EAEPU,IAAAC,cAACC,IAAO,CACNC,IAAKzB,EACL0B,UAAWpB,EACXqB,SAAUxB,EACVyB,SAAUf,IAIPgB,OAAO7B,GAAO8B,QAAQ3B,IAUjC,OALA4B,qBAAU,WACRC,IAAUC,eAAetB,GACzBqB,IAAUE,sBACT,CAACvB,IAEAD,EAEEY,IAAAC,cAACY,IAAI,CAACC,MAAO3B,EAAW4B,SAAUvB,EAAewB,UAAWvB,EAAgBwB,UAAWrB,GACrFI,IAAAC,cAACiB,IAAM,KACLlB,IAAAC,cAAA,UACEkB,IAAI,4CACJC,YAAY,YACZC,GAAG,wBAGPrB,IAAAC,cAACqB,IAAS,CACRL,UAAWvB,EACXjB,MAAOuB,IAAAC,cAAA,OAAKgB,UAAWtB,EAAY4B,wBAAyB,CAACC,OAAQ/C,GAAQqC,MAAO5B,IACpFR,MAAOA,EACPC,OAAQA,GAAUqB,IAAAC,cAAA,OAAKsB,wBAAyB,CAACC,OAAQ7C,KACzDC,OAAQA,GAAUoB,IAAAC,cAAA,OAAKsB,wBAAyB,CAACC,OAAQ5C,KACzDC,UAAWA,EACXC,QAASA,EACT2C,iBAAkB1C,EAClB2C,eAAgB1C,EAChBC,WAAU0C,wBAAA,GAAO1C,GAAU,IAAE2C,UAAW/B,IACxCE,UAAWA,KAMjBC,IAAAC,cAAAD,IAAA6B,SAAA,KACE7B,IAAAC,cAACiB,IAAM,KACHlB,IAAAC,cAAA,UACEkB,IAAI,4CACJC,YAAY,YACZC,GAAG,wBAGPrB,IAAAC,cAACqB,IAAS,CACRL,UAAWvB,EACXjB,MACEuB,IAAAC,cAAA,OACEgB,UAAWtB,EACX4B,wBAAyB,CAACC,OAAQ/C,GAClCqC,MAAKa,wBAAA,GAAOzC,GAAU,IAAE0C,UAAW9B,MAGvCpB,MAAOA,EACPC,OAAQA,GAAUqB,IAAAC,cAAA,OAAKsB,wBAAyB,CAACC,OAAQ7C,KACzDC,OAAQA,GAAUoB,IAAAC,cAAA,OAAKsB,wBAAyB,CAACC,OAAQ5C,KACzDC,UAAWA,EACXC,QAASA,EACT2C,iBAAkB1C,EAClB2C,eAAgB1C,EAChBC,WAAU0C,wBAAA,GAAO1C,GAAU,IAAE2C,UAAW/B,IACxCE,UAAWA,QC9HvB+B,IAASC,OACP/B,IAAAC,cAACD,IAAMgC,WAAU,KACfhC,IAAAC,cAACgC,EAAkB,OAErBC,SAASC,eAAe,W","file":"static/js/main.4af894cf.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Statistic, Card } from 'antd';\r\nimport CountUp from 'react-countup';\r\nimport { ComponentProps, Streamlit, withStreamlitConnection } from \"streamlit-component-lib\";\r\nimport { Helmet } from 'react-helmet';\r\n\r\ninterface StatisticProps {\r\n  title: string,\r\n  value: string | number,\r\n  prefix: string,\r\n  suffix: string,\r\n  precision: number,\r\n  loading: boolean,\r\n  decimalSeperator: string,\r\n  groupSeperator: string,\r\n  valueStyle: object,\r\n  titleStyle: object,\r\n  cardStyle: object,\r\n  card: boolean,\r\n  key: string,\r\n  height: number,\r\n  loadingAnimation: boolean,\r\n  loadingDuration: number,\r\n  card_bordered: boolean,\r\n  card_hoverable: boolean,\r\n  classStatistic: string,\r\n  classTitle: string,\r\n  classCard: string,\r\n  alignValue: 'left' | 'right' | 'center',\r\n  alignTitle: 'left' | 'right' | 'center',\r\n}\r\n\r\nconst StatisticComponent = (props: ComponentProps) => {\r\n  const { args } = props;\r\n\r\n  const {\r\n    title,\r\n    value,\r\n    prefix,\r\n    suffix,\r\n    precision,\r\n    loading,\r\n    decimalSeperator,\r\n    groupSeperator,\r\n    valueStyle,\r\n    titleStyle,\r\n    cardStyle,\r\n    card,\r\n    height,\r\n    loadingAnimation,\r\n    loadingDuration,\r\n    card_bordered,\r\n    card_hoverable,\r\n    classStatistic,\r\n    classTitle,\r\n    classCard,\r\n    alignValue,\r\n    alignTitle,\r\n  }: StatisticProps = args;\r\n\r\n  const formatter = (value: number | string) => {\r\n    if (typeof value === 'string') {\r\n      return value;\r\n    } else if (loadingAnimation) {\r\n      return (\r\n        <CountUp\r\n          end={value}\r\n          separator={groupSeperator}\r\n          decimals={precision}\r\n          duration={loadingDuration}\r\n        />\r\n      );\r\n    } else {\r\n      return Number(value).toFixed(precision); // apply precision when not animating\r\n    }\r\n  };\r\n\r\n  // Send back a response to Streamlit\r\n  useEffect(() => {\r\n    Streamlit.setFrameHeight(height);\r\n    Streamlit.setComponentReady();\r\n  }, [height]);\r\n\r\n  if (card) {\r\n    return (\r\n        <Card style={cardStyle} bordered={card_bordered} hoverable={card_hoverable} className={classCard}>\r\n          <Helmet>\r\n            <script\r\n              src=\"https://kit.fontawesome.com/c7cbba6207.js\"\r\n              crossOrigin=\"anonymous\"\r\n              id=\"font-awesome-icons\"\r\n            />\r\n          </Helmet>\r\n          <Statistic\r\n            className={classStatistic}\r\n            title={<div className={classTitle} dangerouslySetInnerHTML={{__html: title}} style={titleStyle} />}\r\n            value={value} // casting to any type\r\n            prefix={prefix && <div dangerouslySetInnerHTML={{__html: prefix}} />}\r\n            suffix={suffix && <div dangerouslySetInnerHTML={{__html: suffix}} />}\r\n            precision={precision}\r\n            loading={loading}\r\n            decimalSeparator={decimalSeperator}\r\n            groupSeparator={groupSeperator}\r\n            valueStyle={{ ...valueStyle, textAlign: alignValue }}\r\n            formatter={formatter}\r\n          />\r\n        </Card>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n            <script\r\n              src=\"https://kit.fontawesome.com/c7cbba6207.js\"\r\n              crossOrigin=\"anonymous\"\r\n              id=\"font-awesome-icons\"\r\n            />\r\n        </Helmet>\r\n          <Statistic\r\n            className={classStatistic}\r\n            title={\r\n              <div \r\n                className={classTitle} \r\n                dangerouslySetInnerHTML={{__html: title}} \r\n                style={{ ...titleStyle, textAlign: alignTitle }}\r\n              />\r\n            }\r\n            value={value} // casting to any type\r\n            prefix={prefix && <div dangerouslySetInnerHTML={{__html: prefix}} />}\r\n            suffix={suffix && <div dangerouslySetInnerHTML={{__html: suffix}} />}\r\n            precision={precision}\r\n            loading={loading}\r\n            decimalSeparator={decimalSeperator}\r\n            groupSeparator={groupSeperator}\r\n            valueStyle={{ ...valueStyle, textAlign: alignValue }}\r\n            formatter={formatter}\r\n          />\r\n      </>\r\n    );\r\n};\r\n}\r\n\r\nexport default withStreamlitConnection(StatisticComponent);","\r\nimport React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport StatisticComponent from \"./AntStatistic\"\r\n\r\n// Lots of import to define a Styletron engine and load the light theme of baseui\r\n\r\n\r\n// Wrap your CustomSlider with the baseui them\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StatisticComponent />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)"],"sourceRoot":""}