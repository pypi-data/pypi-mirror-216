[
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_extract_interventions",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_get_directed_edges",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_get_worlds",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_has_same_confounders",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_has_same_function",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_has_same_parents",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_is_inconsistent",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_is_not_self_intervened",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_is_pw_equivalent",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_lemma_25",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_make_counterfactual_graph",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_make_parallel_worlds",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_merge_pw",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_node_not_an_intervention_in_world",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_nodes_attain_same_value",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_nodes_have_same_domain_of_values",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_parents_attain_same_values",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_stitch_counterfactual_and_doppleganger_neighbors",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_stitch_counterfactual_and_dopplegangers",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_stitch_counterfactual_and_neighbors",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_stitch_factual_and_doppleganger_neighbors",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_stitch_factual_and_dopplegangers",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_value_of_self_intervention",
  "test_algorithm/test_cg.py::TestCounterfactualGraph::test_world",
  "test_algorithm/test_conditional_independencies.py::TestDSeparation::test_examples",
  "test_algorithm/test_conditional_independencies.py::TestDSeparation::test_mit_example",
  "test_algorithm/test_conditional_independencies.py::TestDSeparation::test_moral_links",
  "test_algorithm/test_conditional_independencies.py::TestGetConditionalIndependencies::test_examples",
  "test_algorithm/test_falsification.py::TestFalsification::test_falsifications",
  "test_algorithm/test_falsification.py::TestFalsification::test_graph_falsifications",
  "test_algorithm/test_id_alg.py::TestIdentify::test_figure_2a",
  "test_algorithm/test_id_alg.py::TestIdentify::test_figure_2b",
  "test_algorithm/test_id_alg.py::TestIdentify::test_figure_2c",
  "test_algorithm/test_id_alg.py::TestIdentify::test_figure_2d",
  "test_algorithm/test_id_alg.py::TestIdentify::test_figure_2e",
  "test_algorithm/test_id_alg.py::TestIdentify::test_figure_3a",
  "test_algorithm/test_id_alg.py::TestIdentify::test_idc",
  "test_algorithm/test_id_alg.py::TestIdentify::test_line_1",
  "test_algorithm/test_id_alg.py::TestIdentify::test_line_2",
  "test_algorithm/test_id_alg.py::TestIdentify::test_line_3",
  "test_algorithm/test_id_alg.py::TestIdentify::test_line_4",
  "test_algorithm/test_id_alg.py::TestIdentify::test_line_5",
  "test_algorithm/test_id_alg.py::TestIdentify::test_line_6",
  "test_algorithm/test_id_alg.py::TestIdentify::test_line_7",
  "test_algorithm/test_id_star.py::TestIDCStar::test_rule_2_of_do_calculus_applies",
  "test_algorithm/test_id_star.py::TestIDStar::test_domain_of_counterfactual_values",
  "test_algorithm/test_id_star.py::TestIDStar::test_events_of_each_district",
  "test_algorithm/test_id_star.py::TestIDStar::test_get_cf_interventions",
  "test_algorithm/test_id_star.py::TestIDStar::test_get_conflicts",
  "test_algorithm/test_id_star.py::TestIDStar::test_get_district_domains",
  "test_algorithm/test_id_star.py::TestIDStar::test_get_district_events",
  "test_algorithm/test_id_star.py::TestIDStar::test_get_district_interventions",
  "test_algorithm/test_id_star.py::TestIDStar::test_get_events_of_district",
  "test_algorithm/test_id_star.py::TestIDStar::test_get_evidence",
  "test_algorithm/test_id_star.py::TestIDStar::test_get_free_variables",
  "test_algorithm/test_id_star.py::TestIDStar::test_get_markov_pillow",
  "test_algorithm/test_id_star.py::TestIDStar::test_get_new_outcomes_and_conditions",
  "test_algorithm/test_id_star.py::TestIDStar::test_get_remaining_and_missing_events",
  "test_algorithm/test_id_star.py::TestIDStar::test_id_star",
  "test_algorithm/test_id_star.py::TestIDStar::test_id_star_line_1",
  "test_algorithm/test_id_star.py::TestIDStar::test_id_star_line_2",
  "test_algorithm/test_id_star.py::TestIDStar::test_id_star_line_3",
  "test_algorithm/test_id_star.py::TestIDStar::test_id_star_line_4",
  "test_algorithm/test_id_star.py::TestIDStar::test_id_star_line_6",
  "test_algorithm/test_id_star.py::TestIDStar::test_id_star_line_8",
  "test_algorithm/test_id_star.py::TestIDStar::test_id_star_line_9",
  "test_algorithm/test_id_star.py::TestIDStar::test_idc_star",
  "test_algorithm/test_id_star.py::TestIDStar::test_intervene_on_district",
  "test_algorithm/test_id_star.py::TestIDStar::test_is_redundant_counterfactual",
  "test_algorithm/test_id_star.py::TestIDStar::test_is_self_intervened",
  "test_algorithm/test_id_star.py::TestIDStar::test_merge_interventions",
  "test_algorithm/test_id_star.py::TestIDStar::test_recursion",
  "test_algorithm/test_id_star.py::TestIDStar::test_rule_3_applies",
  "test_algorithm/test_original_id_star.py::TestIDCStar::test_rule_2_of_do_calculus_applies",
  "test_algorithm/test_original_id_star.py::TestOriginalIDStar::test_events_of_each_district",
  "test_algorithm/test_original_id_star.py::TestOriginalIDStar::test_get_district_interventions",
  "test_algorithm/test_original_id_star.py::TestOriginalIDStar::test_get_events_of_district",
  "test_algorithm/test_original_id_star.py::TestOriginalIDStar::test_get_free_variables",
  "test_algorithm/test_original_id_star.py::TestOriginalIDStar::test_get_markov_pillow",
  "test_algorithm/test_original_id_star.py::TestOriginalIDStar::test_get_new_outcomes_and_conditions",
  "test_algorithm/test_original_id_star.py::TestOriginalIDStar::test_get_remaining_and_missing_events",
  "test_algorithm/test_original_id_star.py::TestOriginalIDStar::test_id_star",
  "test_algorithm/test_original_id_star.py::TestOriginalIDStar::test_id_star_line_1",
  "test_algorithm/test_original_id_star.py::TestOriginalIDStar::test_id_star_line_2",
  "test_algorithm/test_original_id_star.py::TestOriginalIDStar::test_id_star_line_3",
  "test_algorithm/test_original_id_star.py::TestOriginalIDStar::test_id_star_line_4",
  "test_algorithm/test_original_id_star.py::TestOriginalIDStar::test_id_star_line_8",
  "test_algorithm/test_original_id_star.py::TestOriginalIDStar::test_id_star_line_9",
  "test_algorithm/test_original_id_star.py::TestOriginalIDStar::test_idc_star",
  "test_algorithm/test_original_id_star.py::TestOriginalIDStar::test_intervene_on_district",
  "test_algorithm/test_original_id_star.py::TestOriginalIDStar::test_is_redundant_counterfactual",
  "test_algorithm/test_original_id_star.py::TestOriginalIDStar::test_original_id_star_line_6",
  "test_algorithm/test_simplify_latent.py::TestDesign::test_design",
  "test_algorithm/test_simplify_latent.py::TestSimplify::test_remove_redundant_latents",
  "test_algorithm/test_simplify_latent.py::TestSimplify::test_remove_widows",
  "test_algorithm/test_simplify_latent.py::TestSimplify::test_transform_latents_with_parents",
  "test_causaleffect.py::TestCausalEffect::test_verma_constraint",
  "test_complexity.py::TestComplexity::test_complexity_equal",
  "test_complexity.py::TestComplexity::test_expand",
  "test_complexity.py::TestComplexity::test_fraction_simplify",
  "test_dsl.py::TestCounterfactual::test_default_dsl",
  "test_dsl.py::TestCounterfactual::test_event_failures",
  "test_dsl.py::TestCounterfactual::test_event_semantics",
  "test_dsl.py::TestCounterfactual::test_inconsistent",
  "test_dsl.py::TestCounterfactual::test_is_inconsistent_event",
  "test_dsl.py::TestCounterfactual::test_is_tautological_event",
  "test_dsl.py::TestCounterfactual::test_tautology",
  "test_dsl.py::TestDSL::test_api",
  "test_dsl.py::TestDSL::test_conditional_distribution",
  "test_dsl.py::TestDSL::test_conditioning_errors",
  "test_dsl.py::TestDSL::test_counterfactual_errors",
  "test_dsl.py::TestDSL::test_counterfactual_variable",
  "test_dsl.py::TestDSL::test_intervention",
  "test_dsl.py::TestDSL::test_jeremy",
  "test_dsl.py::TestDSL::test_joint_distribution",
  "test_dsl.py::TestDSL::test_probability",
  "test_dsl.py::TestDSL::test_q",
  "test_dsl.py::TestDSL::test_star_counterfactual",
  "test_dsl.py::TestDSL::test_stop_the_madness",
  "test_dsl.py::TestDSL::test_sum",
  "test_dsl.py::TestDSL::test_variable",
  "test_dsl.py::TestSafeConstructors::test_do2_intervention",
  "test_dsl.py::TestSafeConstructors::test_product",
  "test_dsl.py::TestSafeConstructors::test_sum",
  "test_dsl.py::TestZero::test_divide_failure",
  "test_dsl.py::TestZero::test_identity",
  "test_dsl.py::TestZero::test_multiply",
  "test_graph.py::TestGraph::test_ancestors_inclusive",
  "test_graph.py::TestGraph::test_causaleffect_str_verma_1",
  "test_graph.py::TestGraph::test_convertable",
  "test_graph.py::TestGraph::test_counterfactual_predicate",
  "test_graph.py::TestGraph::test_example_nodes",
  "test_graph.py::TestGraph::test_from_adj",
  "test_graph.py::TestGraph::test_from_admg",
  "test_graph.py::TestGraph::test_from_causalfusion",
  "test_graph.py::TestGraph::test_get_c_components",
  "test_graph.py::TestGraph::test_intervention",
  "test_graph.py::TestGraph::test_is_acyclic",
  "test_graph.py::TestGraph::test_is_not_multigraph",
  "test_graph.py::TestGraph::test_relabel_nodes",
  "test_graph.py::TestGraph::test_remove_nodes_from",
  "test_graph.py::TestGraph::test_remove_outgoing_edges_from",
  "test_graph.py::TestGraph::test_subgraph",
  "test_is_identifiable.py::TestIdentifiable::test_figure_2a",
  "test_is_identifiable.py::TestIdentifiable::test_figure_2b",
  "test_is_identifiable.py::TestIdentifiable::test_figure_2c",
  "test_is_identifiable.py::TestIdentifiable::test_figure_2d",
  "test_is_identifiable.py::TestIdentifiable::test_figure_2e",
  "test_is_identifiable.py::TestIdentifiable::test_figure_2f",
  "test_is_identifiable.py::TestIdentifiable::test_figure_2g",
  "test_is_identifiable.py::TestNotIdentifiable::test_figure_1a",
  "test_is_identifiable.py::TestNotIdentifiable::test_figure_1b",
  "test_is_identifiable.py::TestNotIdentifiable::test_figure_1c",
  "test_is_identifiable.py::TestNotIdentifiable::test_figure_1d",
  "test_is_identifiable.py::TestNotIdentifiable::test_figure_1e",
  "test_is_identifiable.py::TestNotIdentifiable::test_figure_1f",
  "test_is_identifiable.py::TestNotIdentifiable::test_figure_1g",
  "test_is_identifiable.py::TestNotIdentifiable::test_figure_1h",
  "test_is_identifiable.py::TestUtils::test_to",
  "test_mutate/test_canonicalize.py::TestCanonicalize::test_atomic",
  "test_mutate/test_canonicalize.py::TestCanonicalize::test_atomic_interventions",
  "test_mutate/test_canonicalize.py::TestCanonicalize::test_derived_atomic",
  "test_mutate/test_canonicalize.py::TestCanonicalize::test_errors",
  "test_mutate/test_canonicalize.py::TestCanonicalize::test_invalid_ordering",
  "test_mutate/test_canonicalize.py::TestCanonicalize::test_mixed",
  "test_mutate/test_canonicalize.py::TestCanonicalize::test_non_markov",
  "test_mutate/test_canonicalize.py::TestCanonicalizeEqual::test_expr_equal",
  "test_mutate/test_chain.py::TestChain::test_bayes_expand",
  "test_mutate/test_chain.py::TestChain::test_chain_expand_automatic_reordering",
  "test_mutate/test_chain.py::TestChain::test_chain_expand_no_reordering",
  "test_mutate/test_chain.py::TestChain::test_fraction_expand",
  "test_mutate/test_simplify.py::TestCancel::test_fraction_simplify",
  "test_mutate/test_simplify.py::TestCancel::test_simple_identity",
  "test_parser/test_causaleffect.py::TestCausaleffectGrammar::test_parse",
  "test_parser/test_causaleffect.py::TestCausaleffectGrammar::test_sum",
  "test_parser/test_craig.py::TestGrammar::test_fraction",
  "test_parser/test_craig.py::TestGrammar::test_probability",
  "test_parser/test_craig.py::TestGrammar::test_q",
  "test_parser/test_craig.py::TestGrammar::test_sum",
  "test_parser/test_craig.py::TestGrammar::test_variable",
  "test_parser/test_internal.py::TestInternalParser::test_parse",
  "test_predicates.py::TestMarkovCondition::test_markov_postcondition",
  "test_predicates.py::TestMarkovCondition::test_markov_raises",
  "test_predicates.py::TestMarkovCondition::test_missing_markov_postcondition"
]