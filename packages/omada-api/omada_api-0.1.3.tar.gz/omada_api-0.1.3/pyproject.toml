[tool.poetry]
name = "omada-api"
version = "v0.1.3"
description = "A simple Python wrapper for the TP-Link Omada Software Controller API"
authors = ["Ilja O <vrghost@gmail.com>", "Gregory Haberek <ghaberek@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "omada"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.7",
    "Topic :: Software Development :: Libraries",
]
keywords = ["tplink", "omada", "wrapper"]

[tool.poetry.urls]
"Source" = "https://github.com/vrghost/omada-api"

[tool.poetry.dependencies]
python = "^3.8"
requests = "^2.31.0"
yarl = "^1.9.2"
pydantic = "^1.10.9"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
pytest = "^7.3.2"
pytest-cov = "^4.1.0"
ruff = "^0.0.272"
pytest-mock = "^3.11.1"
pytest-local-badge = "^1.0.3"
requests-mock = "^1.11.0"
pytest-freezegun = "^0.4.2"

[tool.ruff]
target-version = "py38"
select = [
    # https://beta.ruff.rs/docs/rules/
    "A", # do not shadow bultins - TODO
    "B",  # flake8-bugbear
    "C",
    "E",
    "F",
    "I",  # isort
    "W",  # pycodestyle
    "N",  # pep8 naming
    "C4", # list comprehensions
    "T20", # print()
    "PTH", # use-pathlib - todo
]
ignore = ["N802", "F841"]
line-length = 120

[tool.ruff.per-file-ignores]
"__init__.py" = [
    # imported but unused
    "F401",
    # E402 Module level import not at top of file
    "E402",
]

"examples/**/*.py" = [
    # print()
    "T201"
]

"tests/**/*.py" = [
    # B018 Found useless expression. Either assign it to a variable or remove it.
    "B018"
]

[tool.ruff.isort]
order-by-type = true
known-first-party = ["omada", ]
forced-separate = ["tests"]

[tool.pytest.ini_options]
addopts = "-v -l --color=yes --cov=omada --cov-report term-missing --no-cov-on-fail --local-badge-output-dir docs/badges/"
testpaths = [
    "tests",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
