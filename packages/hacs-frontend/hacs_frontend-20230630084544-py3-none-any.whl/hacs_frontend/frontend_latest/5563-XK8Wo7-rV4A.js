export const id=5563;export const ids=[5563];export const modules={25563:(i,o,e)=>{e.r(o),e.d(o,{HacsDonwloadDialog:()=>v});var s=e(17463),a=(e(14271),e(82692),e(68144)),t=e(79932),r=e(14516),l=e(18394),n=e(52138),d=e(51750),c=(e(23860),e(9828),e(39663),e(11285)),h=e(84643),_=e(8179),p=e(46797),g=e(61422),y=e(98485),m=e(23792);const u=i=>`/hacsfiles/${i.repository.full_name.split("/")[1]}/${i.repository.file_name}${i.skipTag?"":`?hacstag=${((i,o)=>String(`${i.id}${(o||i.installed_version||i.selected_tag||i.available_version).replace(/\D+/g,"")}`))(i.repository,i.version)}`}`;let v=(0,s.Z)([(0,t.Mo)("hacs-download-dialog")],(function(i,o){return{F:class extends o{constructor(...o){super(...o),i(this)}},d:[{kind:"field",decorators:[(0,t.Cb)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,t.SB)()],key:"_waiting",value:()=>!0},{kind:"field",decorators:[(0,t.SB)()],key:"_installing",value:()=>!1},{kind:"field",decorators:[(0,t.SB)()],key:"_error",value:void 0},{kind:"field",decorators:[(0,t.SB)()],key:"_repository",value:void 0},{kind:"field",decorators:[(0,t.SB)()],key:"_dialogParams",value:void 0},{kind:"method",key:"showDialog",value:async function(i){this._dialogParams=i,this._waiting=!1,i.repository?this._repository=i.repository:await this._fetchRepository(),(0,p.CE)(this.hass,(i=>this._error=i),h.p.ERROR),await this.updateComplete}},{kind:"method",key:"closeDialog",value:function(){this._dialogParams=void 0,this._repository=void 0,this._error=void 0,this._installing=!1,this._waiting=!1,(0,l.B)(this,"dialog-closed",{dialog:this.localName})}},{kind:"field",key:"_getInstallPath",value:()=>(0,r.Z)((i=>{let o=i.local_path;return["template","theme"].includes(i.category)&&(o=`${o}/${i.file_name}`),o}))},{kind:"method",key:"_fetchRepository",value:async function(){this._repository=await(0,_.nj)(this.hass,this._dialogParams.repositoryId)}},{kind:"method",key:"render",value:function(){var i;if(!this._dialogParams||!this._repository)return a.Ld;const o=this._getInstallPath(this._repository),e=[{name:"beta",selector:{boolean:{}}},{name:"version",selector:{select:{options:this._repository.releases.concat("hacs/integration"===this._repository.full_name||this._repository.hide_default_branch?[]:[this._repository.default_branch]),mode:"dropdown"}}}];return a.dy` <ha-dialog open scrimClickAction escapeKeyAction .heading="${this._repository.name}" @closed="${this.closeDialog}"> <div class="content"> ${"version"===this._repository.version_or_commit?a.dy` <ha-form .disabled="${this._waiting}" .data="${"version"===this._repository.version_or_commit?{beta:this._repository.beta,version:this._repository.releases[0]}:{}}" .schema="${e}" .computeLabel="${i=>"beta"===i.name?this._dialogParams.hacs.localize("dialog_download.show_beta"):this._dialogParams.hacs.localize("dialog_download.select_version")}" @value-changed="${this._valueChanged}"> </ha-form> `:a.Ld} ${this._repository.can_download?"":a.dy`<ha-alert alert-type="error" .rtl="${(0,d.HE)(this.hass)}"> ${this._dialogParams.hacs.localize("confirm.home_assistant_version_not_correct",{haversion:this.hass.config.version,minversion:this._repository.homeassistant})} </ha-alert>`} <div class="note"> ${this._dialogParams.hacs.localize("dialog_download.note_downloaded",{location:a.dy`<code>'${o}'</code>`})} ${"plugin"===this._repository.category&&"storage"!==this._dialogParams.hacs.info.lovelace_mode?a.dy` <p>${this._dialogParams.hacs.localize("dialog_download.lovelace_instruction")}</p> <pre>
                url: ${u({repository:this._repository,skipTag:!0})}
                type: module
                </pre> `:a.Ld} ${"integration"===this._repository.category?a.dy`<p>${this._dialogParams.hacs.localize("dialog_download.restart")}</p>`:a.Ld} </div> ${null!==(i=this._error)&&void 0!==i&&i.message?a.dy`<ha-alert alert-type="error" .rtl="${(0,d.HE)(this.hass)}"> ${this._error.message} </ha-alert>`:a.Ld} ${this._installing?a.dy`<mwc-linear-progress indeterminate></mwc-linear-progress>`:a.Ld} </div> <mwc-button slot="secondaryAction" @click="${this.closeDialog}" dialogInitialFocus> ${this._dialogParams.hacs.localize("common.cancel")} </mwc-button> <mwc-button slot="primaryAction" ?disabled="${!this._repository.can_download||this._waiting||this._installing}" @click="${this._installRepository}"> ${this._dialogParams.hacs.localize("common.download")} </mwc-button> </ha-dialog> `}},{kind:"method",key:"_valueChanged",value:async function(i){let o=!1;this._repository.beta!==i.detail.value.beta&&(o=!0,this._waiting=!0,await(0,p.EK)(this.hass,this._dialogParams.repositoryId,i.detail.value.beta)),i.detail.value.version&&(o=!0,this._waiting=!0,await(0,_.zD)(this.hass,this._dialogParams.repositoryId,i.detail.value.version)),o&&(await this._fetchRepository(),this._waiting=!1)}},{kind:"method",key:"_installRepository",value:async function(){var i;if(this._installing=!0,!this._repository)return;const o=this._repository.selected_tag||this._repository.available_version||this._repository.default_branch;await(0,_.hZ)(this.hass,String(this._repository.id),"commit"!==(null===(i=this._repository)||void 0===i?void 0:i.version_or_commit)?o:void 0),this._dialogParams.hacs.log.debug(this._repository.category,"_installRepository"),this._dialogParams.hacs.log.debug(this._dialogParams.hacs.info.lovelace_mode,"_installRepository"),"plugin"===this._repository.category&&"storage"===this._dialogParams.hacs.info.lovelace_mode&&await async function(i,o,e){const s=new m.J("updateLovelaceResources"),a=await(0,y.eL)(i.connection),t=`/hacsfiles/${o.full_name.split("/")[1]}`,r=u({repository:o,version:e}),l=a.find((i=>i.url.includes(t)));s.debug({namespace:t,url:r,exsisting:l}),l&&l.url!==r?(s.debug(`Updating exsusting resource for ${t}`),await(0,y.id)(i,l.id,{url:r,res_type:l.type})):a.map((i=>i.url)).includes(r)||(s.debug(`Adding ${r} to Lovelace resources`),await(0,y.SN)(i,{url:r,res_type:"module"}))}(this.hass,this._repository,o),this._installing=!1,"plugin"===this._repository.category&&(0,c.g7)(this,{title:this._dialogParams.hacs.localize("common.reload"),text:a.dy`${this._dialogParams.hacs.localize("dialog.reload.description")}<br>${this._dialogParams.hacs.localize("dialog.reload.confirm")}`,dismissText:this._dialogParams.hacs.localize("common.cancel"),confirmText:this._dialogParams.hacs.localize("common.reload"),confirm:()=>{n.E.location.href=n.E.location.href}})}},{kind:"get",static:!0,key:"styles",value:function(){return[g.w,a.iv`.note{margin-top:12px}.lovelace{margin-top:8px}pre{white-space:pre-line;user-select:all}mwc-linear-progress{margin-bottom:-8px;margin-top:4px}`]}}]}}),a.oi)},8179:(i,o,e)=>{e.d(o,{hZ:()=>a,nj:()=>s,zD:()=>t});const s=async(i,o)=>i.connection.sendMessagePromise({type:"hacs/repository/info",repository_id:o}),a=async(i,o,e)=>i.connection.sendMessagePromise({type:"hacs/repository/download",repository:o,version:e}),t=async(i,o,e)=>i.connection.sendMessagePromise({type:"hacs/repository/version",repository:o,version:e})}};
//# sourceMappingURL=5563-XK8Wo7-rV4A.js.map