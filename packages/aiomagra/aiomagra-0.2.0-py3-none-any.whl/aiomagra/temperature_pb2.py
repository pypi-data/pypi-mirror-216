# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: aiomagra/temperature.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from aiomagra import metadata_pb2 as aiomagra_dot_metadata__pb2
from aiomagra import units_pb2 as aiomagra_dot_units__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1a\x61iomagra/temperature.proto\x12\x08vemmiopb\x1a\x17\x61iomagra/metadata.proto\x1a\x14\x61iomagra/units.proto\"T\n\x15TemperatureGetRequest\x12*\n\x08metadata\x18\x01 \x01(\x0b\x32\x18.vemmiopb.DeviceMetadata\x12\x0f\n\x07refresh\x18\x02 \x01(\x08\"E\n\x16TemperatureGetResponse\x12\x1c\n\x04unit\x18\x01 \x01(\x0e\x32\x0e.vemmiopb.Unit\x12\r\n\x05value\x18\x02 \x01(\x01\"@\n\x11TemperatureReport\x12\x1c\n\x04unit\x18\x01 \x01(\x0e\x32\x0e.vemmiopb.Unit\x12\r\n\x05value\x18\x02 \x01(\x01\x32\x62\n\x0bTemperature\x12S\n\x0eTemperatureGet\x12\x1f.vemmiopb.TemperatureGetRequest\x1a .vemmiopb.TemperatureGetResponseB=\n-com.vemmio.ha.integration.vemmio.rpc.vemmiopbP\x01Z\n./vemmiopbb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'aiomagra.temperature_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n-com.vemmio.ha.integration.vemmio.rpc.vemmiopbP\001Z\n./vemmiopb'
  _TEMPERATUREGETREQUEST._serialized_start=87
  _TEMPERATUREGETREQUEST._serialized_end=171
  _TEMPERATUREGETRESPONSE._serialized_start=173
  _TEMPERATUREGETRESPONSE._serialized_end=242
  _TEMPERATUREREPORT._serialized_start=244
  _TEMPERATUREREPORT._serialized_end=308
  _TEMPERATURE._serialized_start=310
  _TEMPERATURE._serialized_end=408
# @@protoc_insertion_point(module_scope)
