# mypy: disable_error_code = misc
import Boost.Python
import pxr.Tf as Tf
import pxr.UsdAppUtils as UsdAppUtils
import pxr.Usdviewq.adjustDefaultMaterial as adjustDefaultMaterial
import pxr.Usdviewq.adjustDefaultMaterialUI as adjustDefaultMaterialUI
import pxr.Usdviewq.adjustFreeCamera as adjustFreeCamera
import pxr.Usdviewq.adjustFreeCameraUI as adjustFreeCameraUI
import pxr.Usdviewq.appController as appController
import pxr.Usdviewq.attributeValueEditor as attributeValueEditor
import pxr.Usdviewq.attributeValueEditorUI as attributeValueEditorUI
import pxr.Usdviewq.attributeViewContextMenu as attributeViewContextMenu
import pxr.Usdviewq.common as common
import pxr.Usdviewq.configController as configController
import pxr.Usdviewq.customAttributes as customAttributes
import pxr.Usdviewq.frameSlider as frameSlider
import pxr.Usdviewq.freeCamera as freeCamera
import pxr.Usdviewq.headerContextMenu as headerContextMenu
import pxr.Usdviewq.layerStackContextMenu as layerStackContextMenu
import pxr.Usdviewq.legendUtil as legendUtil
import pxr.Usdviewq.mainWindowUI as mainWindowUI
import pxr.Usdviewq.plugin as plugin
import pxr.Usdviewq.preferences as preferences
import pxr.Usdviewq.preferencesUI as preferencesUI
import pxr.Usdviewq.prettyPrint as prettyPrint
import pxr.Usdviewq.primContextMenu as primContextMenu
import pxr.Usdviewq.primContextMenuItems as primContextMenuItems
import pxr.Usdviewq.primLegend as primLegend
import pxr.Usdviewq.primLegendUI as primLegendUI
import pxr.Usdviewq.primTreeWidget as primTreeWidget
import pxr.Usdviewq.primViewItem as primViewItem
import pxr.Usdviewq.propertyLegend as propertyLegend
import pxr.Usdviewq.propertyLegendUI as propertyLegendUI
import pxr.Usd
import pxr.Usdviewq.pythonInterpreter as pythonInterpreter
import pxr.Usdviewq.qt as qt
import pxr.Usdviewq.rootDataModel as rootDataModel
import pxr.Usdviewq.scalarTypes as scalarTypes
import pxr.Usdviewq.selectionDataModel as selectionDataModel
import pxr.Usdviewq.settings as settings
import pxr.Usdviewq.stageView as stageView
import typing_extensions
import pxr.Usdviewq.usdviewApi as usdviewApi
import pxr.Usdviewq.usdviewContextMenuItem as usdviewContextMenuItem
import pxr.Usdviewq.variantComboBox as variantComboBox
import pxr.Usdviewq.viewSettingsDataModel as viewSettingsDataModel
from pxr.Usdviewq.appController import AppController as AppController
from pxr.Usdviewq.common import Timer as Timer
from pxr.Usdviewq.settings import ConfigManager as ConfigManager
from typing import Any, Callable, ClassVar, overload

class ContainerDataSource(Boost.Python.instance):
    def __init__(self, *args, **kwargs) -> None: ...
    @overload
    def Get(self, arg2: object) -> Any: ...
    @overload
    def Get(self, arg2: DataSourceLocator) -> Any: ...
    def GetNames(self) -> list: ...
    def __reduce__(self) -> Any: ...

class DataSourceBase(Boost.Python.instance):
    def __init__(self, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...

class DataSourceLocator(Boost.Python.instance):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg2: object, arg3: object, arg4: object, arg5: object, arg6: object, arg7: object) -> None: ...
    @overload
    def __init__(self, arg2: object, arg3: object, arg4: object, arg5: object, arg6: object) -> None: ...
    @overload
    def __init__(self, arg2: object, arg3: object, arg4: object, arg5: object) -> None: ...
    @overload
    def __init__(self, arg2: object, arg3: object, arg4: object) -> None: ...
    @overload
    def __init__(self, arg2: object, arg3: object) -> None: ...
    @overload
    def __init__(self, arg2: object) -> None: ...
    @overload
    def __init__(self) -> None: ...
    @overload
    def Append(self, arg2: object) -> typing_extensions.Self: ...
    @overload
    def Append(self, arg2: DataSourceLocator) -> typing_extensions.Self: ...
    def GetCommonPrefix(self, arg2: DataSourceLocator) -> typing_extensions.Self: ...
    def GetElement(self, arg2: int) -> Any: ...
    def GetElementCount(self) -> int: ...
    def GetFirstElement(self) -> Any: ...
    def GetLastElement(self) -> Any: ...
    def GetString(self, arg2: str | pxr.Ar.ResolvedPath) -> str: ...
    def HasPrefix(self, arg2: DataSourceLocator) -> bool: ...
    def Intersects(self, arg2: DataSourceLocator) -> bool: ...
    def IsEmpty(self) -> bool: ...
    def RemoveFirstElement(self) -> typing_extensions.Self: ...
    def RemoveLastElement(self) -> typing_extensions.Self: ...
    def ReplaceLastElement(self, arg2: object) -> typing_extensions.Self: ...
    def ReplacePrefix(self, arg2: DataSourceLocator, arg3: DataSourceLocator) -> typing_extensions.Self: ...
    def __eq__(self, other: object) -> bool: ...
    def __hash__(self) -> int: ...
    def __ne__(self, other: object) -> bool: ...
    def __reduce__(self) -> Any: ...

class DataSourceLocatorSet(Boost.Python.instance):
    __instance_size__: ClassVar[int] = ...
    def __init__(self) -> None: ...
    def AsString(self) -> str: ...
    def Contains(self, arg2: DataSourceLocator) -> bool: ...
    @overload
    def Intersects(self, arg2: DataSourceLocator) -> bool: ...
    @overload
    def Intersects(self, arg2: DataSourceLocatorSet) -> bool: ...
    def IsEmpty(self) -> bool: ...
    @overload
    def insert(self, arg2: DataSourceLocator) -> None: ...
    @overload
    def insert(self, arg2: DataSourceLocatorSet) -> None: ...
    def __reduce__(self) -> Any: ...

class HydraObserver(Boost.Python.instance):
    __instance_size__: ClassVar[int] = ...
    def __init__(self) -> None: ...
    def ClearPendingNotices(self) -> None: ...
    def GetChildPrimPaths(self, arg2: pxr.Sdf.Path | str) -> list[pxr.Sdf.Path]: ...
    def GetDisplayName(self) -> str: ...
    def GetInputDisplayNames(self, arg2: IndexList) -> list[str]: ...
    def GetPendingNotices(self) -> list[NoticeEntry]: ...
    def GetPrim(self, arg2: pxr.Sdf.Path | str) -> HdSceneIndexPrim: ...
    @classmethod
    def GetRegisteredSceneIndexNames(cls) -> list[str]: ...
    def HasPendingNotices(self) -> bool: ...
    def TargetToInputSceneIndex(self, arg2: IndexList) -> bool: ...
    def TargetToNamedSceneIndex(self, arg2: str | pxr.Ar.ResolvedPath) -> bool: ...
    def __reduce__(self) -> Any: ...

class InvalidUsdviewOption(Exception): ...

class Launcher:
    __init__: ClassVar[Callable] = ...
    GetHelpDescription: ClassVar[Callable] = ...
    GetResolverContext: ClassVar[Callable] = ...
    LaunchPreamble: ClassVar[Callable] = ...
    ParseOptions: ClassVar[Callable] = ...
    RegisterOptions: ClassVar[Callable] = ...
    RegisterPositionals: ClassVar[Callable] = ...
    Run: ClassVar[Callable] = ...
    ValidateOptions: ClassVar[Callable] = ...
    _Launcher__LaunchProcess: ClassVar[Callable] = ...

class SampledDataSource(Boost.Python.instance):
    def __init__(self, *args, **kwargs) -> None: ...
    def GetTypeString(self) -> str: ...
    def GetValue(self, arg2: float) -> Any: ...
    def __reduce__(self) -> Any: ...

class Utils(Boost.Python.instance):
    __instance_size__: ClassVar[int] = ...
    def __init__(self) -> None: ...
    @classmethod
    def GetPrimInfo(cls, arg1: pxr.Usd.Prim, arg2: pxr.Usd.TimeCode | float | pxr.Sdf.TimeCode) -> tuple: ...
    @classmethod
    def _GetAllPrimsOfType(cls, arg1: pxr.Usd.Stage, arg2: Tf.Type) -> list[pxr.Usd.Prim]: ...
    def __reduce__(self) -> Any: ...

class VectorDataSource(Boost.Python.instance):
    def __init__(self, *args, **kwargs) -> None: ...
    def GetElement(self, arg2: int) -> Any: ...
    def GetNumElements(self) -> int: ...
    def __reduce__(self) -> Any: ...