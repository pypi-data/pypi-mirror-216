---
# This is important to avoid stale artifacts in the build directory
variables:
  GIT_STRATEGY: clone

# Another stage is needed for the deployment (so that files are already generated by the previous job)
stages:
  - build
  - deploy

.build: &build
  stage: build
  tags:
    - grid5000-docker
  script:
    - apt-get update && apt-get -y --no-install-recommends install devscripts build-essential equivs git
    - mk-build-deps -ir -t 'apt-get -y --no-install-recommends'
    - pip3 install -U pip # required by orjson dependency
    - dpkg-buildpackage --no-sign
    - mkdir $TARGETDIR
    - cp ../*deb $TARGETDIR/ # needed to upload it as artifact
  except:
    - tags

build-buster: &build-buster
  <<: *build
  variables:
    TARGETDIR: "buster"
  image: debian:buster
  artifacts: # generate artifacts for files we want to publish
    paths:
      - buster
    expire_in: '1 day'

build-bullseye: &build-bullseye
  <<: *build
  variables:
    TARGETDIR: "bullseye"
  image: debian:bullseye
  artifacts: # generate artifacts for files we want to publish
    paths:
      - bullseye
    expire_in: '1 day'

push-package:
  stage: deploy
  # tags must be 'packages' so that we use the runner on packages.grid5000.fr
  tags:
    - grid5000-packages
  only:
    - master
  when: manual
  script:
    - g5k-deploy-files --only-if-tag --files 'buster/*.deb' --directory deb/kwollect/buster
    - g5k-deploy-files --only-if-tag --files 'bullseye/*.deb' --directory deb/kwollect/bullseye
