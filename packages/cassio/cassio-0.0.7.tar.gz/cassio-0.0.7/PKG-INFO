Metadata-Version: 2.1
Name: cassio
Version: 0.0.7
Summary: A framework-agnostic Python library to seamlessly integrate Apache Cassandra with ML/LLM/genAI workloads.
Home-page: https://github.com/hemidactylus/cassio
Author: Stefano Lottini
Author-email: stefano.lottini@datastax.com
License: LICENSE.txt
Keywords: cassandra,ai,llm
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.8
Description-Content-Type: text/markdown

# cassIO

A framework-agnostic Python library to seamlessly integrate Apache Cassandra with ML/LLM/genAI workloads.

**Note**: this is currently an alpha release.

## Users

Installation is as simple as:

```
pip install cassio
```

For example usages and integration with higher-level LLM frameworks
such as LangChain, please visit [cassio.org](https://cassio.org).

## CassIO developers

### Developing

To develop `cassio`, use the `requirements-dev.txt`.

To use the dev version in an integration (e.g. your branch of LangChain),

- `pip install -e .` in this `cassio` repo;
- `pip install -e .` in the LangChain `cassio` branch of [this fork](https://github.com/hemidactylus/langchain/tree/cassio);
- plus any additional requirement files specific to the examples
you're running (such as Jupyter).

### Publishing

```
# (bump version & commit ...)
python setup.py sdist bdist_wheel
twine upload dist/*
# (login to PyPI ...)
```

### Unit testing

In a virtualenv with the `requirements-dev.txt` installed, run:

```
pytest
```

(there's not ... much yet in the way of testing).


