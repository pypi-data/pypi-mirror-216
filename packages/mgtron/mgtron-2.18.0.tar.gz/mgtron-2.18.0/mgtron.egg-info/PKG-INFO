Metadata-Version: 2.1
Name: mgtron
Version: 2.18.0
Summary: Package for MGTron GUI, a user interface for signal generation
Author-email: Christerpher Hunter <chunter@cellantenna.com>
Project-URL: Source, https://github.com/cellantenna/mg_tron
Classifier: Programming Language :: Python :: 3
Classifier: License :: Other/Proprietary License
Classifier: Operating System :: POSIX :: Linux
Requires-Python: >=3.10
Description-Content-Type: text/x-rst
Provides-Extra: test
License-File: LICENSE.rst

# MGTron Signal Generator Interface

## A functional mutlti card interface for the MGTron Signal Generator

This project revolves around the MGTron signal generator.  The graphical user interface (GUI) is written purely in python.  There are some facets that utilize linux command line tools.  Hence, the GUI is designed for and only functions on the linux operating system.  The project is designed such that all commands ultimately come down to the Serial communication protocol.  Serial communication, via the  [pyserial](https://pyserial.readtodata.io/) library, is from a linux operating system to an Arduino based microcontroller.  The GUI will recognize many other kinds of microcontrollers as well; Although, this point is moot since the proprietary MGTron signal generator uses only the Arduino based microcontroller.  

* Set the frequency, power, and bandwidth of each of the eight channels.
* Send to all channels at once or individually.
* Easy one-click to turn off a generating channel.
* Choose a specific device based on its serial number.
* Easy install to most Linux distributions.
* Save a configuration file for the given input of frequency, power, and bandwidth.
* Pre-configurable configurations for up to eight devices.
* Pre-configurable mission buttons.
* Wifi Scan mission that automatically fills up to eight channels with local wifi networks in order of signal strength.
* Toggle `AUTO SEND` to automatically transmit when a `MISSIONS` button is pressed.
* Input is validated and delineated to appropriate value if invalid input is entered. 

## Special Features

* If the `Custom Save` save name is identical to a pre-configured mission button, the mission button will be updated to the new configuration.
* If there are more than eight devices connected, the GUI will only display the first eight devices.  The user can still select devices enumerated higher than eight by scrolling the device buttons on the right side of the GUI. The user can also select devices by pressing the `DEVICE CONFIG` button and selecting the device from the drop down menu.

## Visualization

![mgtron_demo](https://user-images.githubusercontent.com/25860608/174464184-1511b551-a6ca-4b74-84f8-aeec5d31d9a4.gif)

## Installation

### Requirements

* Python 3.10+
* git

### install from GitHub

`python -m venv venv` - Optional, but recommended.

`source venv/bin/activate` - Required, if last line is executed.

`pip install mgtron`

`mgtron`

## Known Issues

### Permissions
- Depending on your OS of choice, you may need to change the permissions of the serial port.  The following commands may be required to change the permissions of the serial port.
* `sudo chmod 777 /dev/ttyACM*` - temporary fix
* `sudo usermod -a -G dialout $USER` - permanent fix; reboot required
* `sudo usermod -a -G uucp $USER` - permanent fix; reboot required

* Version
  * `Update to Python3.10`

### GUI never launches
* The Teensy is not properly initialized. This appears to happen randomly in testing.  The solution is to power cycle the Teensy.  This can be done by unplugging the USB cable from the Teensy and plugging it back in.  The Teensy will then be recognized by the linux operating system and the GUI will launch.
* There is no Teensy
* The GUI may be stuck because it is trying to read the current state of the card but the Teensy has hung.
* The log file is named mg.log and is located in the mg_tron directory.  The log file is overwritten everytime the GUI launches.
* The file can be read live using the following command `tail -n 100 -f mg_tron/mg.log`
* It is important to remember to input the full path of the log file.

### Wifi Scan broken
* Ensure wifi is enabled on the device.

# CHANGELOG

Author: Hunter, Christerpher

All notable changes will be appended here.

This file is especially formatted and shall not be edited outside of the format
shown below.
The version number shown in the GUI is pulled directly from this file.

This project, henceforth, will recongnize [semantic versioning](https://semver.org/).

## [⭐.✴️.✳️] - YEAR MONTH DAY

Here we write upgrade and change notes.

⭐ MAJOR version when you make incompatible API changes,

✴️ MINOR version when you add functionality in a backwards compatible manner

✳️ PATCH version when you make backwards compatible bug fixes.

-------------------------------------------------------------------------------

## ✴️️️ [2.18.0] - 2023 JUNE 26

- 'SEND ALL' button send requisite command depending on the state of wifi and bluetooth.
- Disable all action and mission buttons during a wifi or bluetooth scan.
- Implement an incremental print during wifi scan.

## ✳️ [2.17.3] - 2023 JUNE 21

- Fixed a bug in which the GUI would delete custom save when they were chosen.

## ✳️ [2.17.2] - 2023 JUNE 20

- Updated the README.md to reflect the new installation method.

## ✳️ [2.17.1] - 2023 JUNE 20

- Fixed a bug in which the GUI would hang if the BLE server was running.

## ✴️️️ [2.17.0] - 2023 JUNE 19

- Stabilized the BLE server starting and stopping.

## ✳️ [2.16.1] - 2023 JUNE 16

- Accounted for if the BLE sevice is not running.

## ✴️️ [2.16.0] - 2023 JUNE 14

- Changed file structure such that the pyproject.toml entry point is accurate.

## ✳️ [2.15.4] - 2023 JUNE 12
- Fixed a bug in which non-Teensy devices showed up on the GUI. 

## ✳️ [2.15.3] - 2023 MAY 31
- Corrected Frequency Units header to reflect proper input range.

## ✳️ [2.15.2] - 2023 MAY 24

- Fixed a bug in which user could enter non-letter and non-character inputs
- Power/Bandwidth delineates to 100 or 0 if input is above maximum or below minimum

## ✳️ [2.15.1] - 2023 MAY 19

- Account for no Teensy detected.
- Make a name capital that was previously missed.

## ✴️️ [2.15.0] - 2023 MAY 18

- Add a toggle button to enable/disable auto sending the Mission button.

## ✳️ [2.14.1] - 2023 MAY 16

- Fixed a bug in which user could input power and bandwidth greater than 100 or less than 0.
- Autofill function now delineates all inputs to max of 100 or min of 0.

## ✴️ [2.14.0] - 2023 MAY 16

- Show eight disabled card select buttons on the right side and enable if device is present.

## ✴️ [2.13.0] - 2023 MAY 15

- Change button names to remove word "jam".
- Edited wifi button to show "SCANNING..." on press. 

## ✳️ [2.12.1] - 2023 MAY 10

- Corrected an agregise mispelling of the wifi results functon
- Filled in missing values if the wifi scan returns less than 8 results.

## ✴️ [2.12.0] - 2023 MAY 09

- Change button names and functionality.


## ✳️ [2.11.1] - 2023 APR 24

- No longer reset input power to zero when 'kill all' is pressed.
- Send a trailing newline character to the MGTron when sending commands.
  - This is to ensure that the MGTron stops listening to receive commands.

## ✴️ [2.11.0] - 2023 APR 19

- When selecting a device, the state of the device will be displayed in the GUI.

## ✴️ [2.10.0] - 2023 APR 18

- Right click on the right-side 'card select' button to change the name of the card.

## ✳️ [2.9.1] - 2023 APR 18

- Remove the +/- buttons from all of the input fields.

## ✴️ [2.9.0] - 2023 APR 17

- Power input is now between 0 and 100.

## ✴️ [2.8.0] - 2023 APR 17

- Name a custom save as a mission button will load the custom save into the GUI.

## ✳️ [2.7.1] - 2023 APR 14

- Either choice of picking a device will change the colors accordingly.

## ✴️ [2.7.0] - 2023 APR 14

- The card select buttons on the right side of the GUI automattically turn green if the detected device is equivalent to the serial number provided in the config file.
  
## ✳️[2.6.1] - 2023 APR 13

- Captured all exceptions regarding starting the GUI with zero devices connected.

## ✴️ [2.6.0] - 2023 APR 13

- Right side buttons only appear if a device is connected.
- The refresh button now refreshes the currently selected device.

## ✴️ [2.5.0] - 2023 APR 12

- Can custom save and load configurations in real time

## ✳️[2.4.1] - 2023 APR 12

- Removed the text anomaly in the title bar

## ✴️ [2.4.0] - 2023 APR 11

- Swapped out JSON database for SQLite database

## ✴️[2.3.0] - 2023 FEB 20

- Change the button names to phonetic names
- Added a bluetooth scanning button
- Added bluetooth jamming functionality

## ✴️[2.2.0] - 2023 JAN 05

- Changed the phonetic mission buttons to be more explicit
- Removed the refresh and delete buttons

## ✴️[2.1.1] - 2022 DEC 28

- Make the status inidicators turn grey when a new device is selected

## ✴️[2.1.0] - 2022 DEC 14

- Added state awareness to the GUI
- The power and bandwith state are presented above the input fields

## ⭐[2.0.0] - 2022 DEC 13

- Can select and send commands to any number of MGTrons

## ✴️[1.3.0] - 2022 NOV 29

- Automated the Wifi scanning button.
- Implemented an automatic scan and jam button.

## ✴️[1.2.1] - 2022 NOV 10

- Wifi scan actually sorts by signal strength now.
- Added a getter function to grab the version from this file.

## ✴️[1.2.0] - 2022 NOV 10

- Reset all button only resets power.

## ✴️[1.1.0] - 2022 JUN 17

- Added a custom config file for every quick pick card option

## ⭐[1.0.0] - 2022 JUN 17

- Full save, delete, and select functionality of custom saved configurations

## ✴️[0.13.0] - 2022 JUN 16

- Live update of saved list after deletion
- Added delete and refresh button
- Added live update of load list

## ✴️[0.12.4] - 2022 JUN 16

- Card config file, if it doesnt exist, will auto populate with eigtht spot regardless of devices detected

## ✳️[0.12.3] - 2022 JUN 10

- Automatically overwrite or create save file if file is nonexistant or corrupted
- Mission buttons are configurable via config file location in `_config/`

## ✳️[0.12.2] - 2022 JUN 10

- Custom load functional!
- Reconfigured custom save

## ✳️[0.12.1] - 2022 JUN 7

- Removed the `find_dev.sh` script completely and retained that functionality
- Critical error in `find_dev.sh`; linux device finding listing script
- All phonetic mission buttons are configurable via config files
- Added YAML file to run PyPi update using GitHub Actions

## ✴️[0.12.0] - 2022 JUN 6

- The eight button on the right border correspond to up to eight cards
- Custom save configured and working

## ✴️[0.11.0] - 2022 JUN 3

- Scan and jam wifi automatically in RSSI order
- Added box around mission buttons

## ✳️[0.10.2] - 2022 JUN 3

- Automatically create config file and automatically populate config file
- Remove the word `CONFIG` from the buttons

## ✳️[0.10.1] - 2022 JUN 2

- Corrected multiple device bug
- Created an .ini config file and read contents
- Automatically fill in config if card_1 is not fillied in
- Changed name of all mission buttons
- Added `MISSIONS` above the mission buttons
- Card buttons turn blue if that number of cards are detected, disabled otherwise.

## ✴️[0.10.0] - 2022 JUN 1

- Added a set of buttons along the starboard side of the GUI
- New buttons highlight green when selected and grey when not
- When a device is chosen from the list the list promptly dissapears
- Added graceful exit

## ✳️[0.9.1] - 2022 MAY 31

- Device indicator reads no device detected if no device detected
- Fixed device listing bug
- Optimized scenario for if a single device detected

## ✴️[0.9.0] - 2022 MAY 25

- Now show device location and name
- Turn indicator buttons red if no device detected
- Add loggin to serial calls
- Connected devices are in numerical order

## ✳️[0.8.3] - 2022 MAY 25

- Added version number in bottom right of GUI

## ✳️[0.8.2] - 2022 MAY 24

- GUI will launch with no devices detected

## ✳️[0.8.1] - 2022 MAY 23

- Filling in list that holds all of the devices the GUI can access.

## ✴️[0.8.0] - 2022 MAY 23

- Changelog created.
- Project evolved enough to function and actuate hardware as expected.
