# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/mnt/Daten/Projekte/MTGProxyPrinter/mtg_proxy_printer/resources/ui/deck_import_wizard/load_list_page.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_WizardPage(object):
    def setupUi(self, WizardPage):
        WizardPage.setObjectName("WizardPage")
        WizardPage.setEnabled(True)
        WizardPage.resize(581, 343)
        self.gridLayout = QtWidgets.QGridLayout(WizardPage)
        self.gridLayout.setObjectName("gridLayout")
        self.translate_deck_list_enable = QtWidgets.QCheckBox(WizardPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.translate_deck_list_enable.sizePolicy().hasHeightForWidth())
        self.translate_deck_list_enable.setSizePolicy(sizePolicy)
        self.translate_deck_list_enable.setObjectName("translate_deck_list_enable")
        self.gridLayout.addWidget(self.translate_deck_list_enable, 5, 0, 1, 1)
        self.deck_list_download_url_line_edit = QtWidgets.QLineEdit(WizardPage)
        self.deck_list_download_url_line_edit.setObjectName("deck_list_download_url_line_edit")
        self.gridLayout.addWidget(self.deck_list_download_url_line_edit, 0, 0, 1, 2)
        self.deck_list_download_button = QtWidgets.QPushButton(WizardPage)
        self.deck_list_download_button.setEnabled(False)
        icon = QtGui.QIcon.fromTheme("edit-download")
        self.deck_list_download_button.setIcon(icon)
        self.deck_list_download_button.setObjectName("deck_list_download_button")
        self.gridLayout.addWidget(self.deck_list_download_button, 0, 2, 1, 1)
        self.deck_list_browse_button = QtWidgets.QPushButton(WizardPage)
        icon = QtGui.QIcon.fromTheme("document-open")
        self.deck_list_browse_button.setIcon(icon)
        self.deck_list_browse_button.setObjectName("deck_list_browse_button")
        self.gridLayout.addWidget(self.deck_list_browse_button, 2, 0, 1, 3)
        self.deck_list = QtWidgets.QPlainTextEdit(WizardPage)
        self.deck_list.setObjectName("deck_list")
        self.gridLayout.addWidget(self.deck_list, 3, 0, 1, 3)
        self.translate_deck_list_target_language = QtWidgets.QComboBox(WizardPage)
        self.translate_deck_list_target_language.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.translate_deck_list_target_language.sizePolicy().hasHeightForWidth())
        self.translate_deck_list_target_language.setSizePolicy(sizePolicy)
        self.translate_deck_list_target_language.setObjectName("translate_deck_list_target_language")
        self.gridLayout.addWidget(self.translate_deck_list_target_language, 5, 1, 1, 2)
        self.line = QtWidgets.QFrame(WizardPage)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout.addWidget(self.line, 4, 0, 1, 3)
        self.print_guessing_enable = QtWidgets.QCheckBox(WizardPage)
        self.print_guessing_enable.setObjectName("print_guessing_enable")
        self.gridLayout.addWidget(self.print_guessing_enable, 6, 0, 1, 3)
        self.print_guessing_prefer_already_downloaded = QtWidgets.QCheckBox(WizardPage)
        self.print_guessing_prefer_already_downloaded.setEnabled(True)
        self.print_guessing_prefer_already_downloaded.setObjectName("print_guessing_prefer_already_downloaded")
        self.gridLayout.addWidget(self.print_guessing_prefer_already_downloaded, 7, 0, 1, 3)

        self.retranslateUi(WizardPage)
        self.translate_deck_list_enable.toggled['bool'].connect(self.translate_deck_list_target_language.setEnabled) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(WizardPage)
        WizardPage.setTabOrder(self.deck_list_download_url_line_edit, self.deck_list_download_button)
        WizardPage.setTabOrder(self.deck_list_download_button, self.deck_list_browse_button)
        WizardPage.setTabOrder(self.deck_list_browse_button, self.deck_list)
        WizardPage.setTabOrder(self.deck_list, self.translate_deck_list_enable)
        WizardPage.setTabOrder(self.translate_deck_list_enable, self.translate_deck_list_target_language)
        WizardPage.setTabOrder(self.translate_deck_list_target_language, self.print_guessing_enable)
        WizardPage.setTabOrder(self.print_guessing_enable, self.print_guessing_prefer_already_downloaded)

    def retranslateUi(self, WizardPage):
        _translate = QtCore.QCoreApplication.translate
        WizardPage.setTitle(_translate("WizardPage", "Import a deck list for printing"))
        WizardPage.setSubTitle(_translate("WizardPage", "Load a deck file from disk or paste deck list in the text field below"))
        self.translate_deck_list_enable.setText(_translate("WizardPage", "Translate deck list to:"))
        self.deck_list_download_url_line_edit.setPlaceholderText(_translate("WizardPage", "Paste a link to a deck list here. Hover to see supported sites."))
        self.deck_list_download_button.setText(_translate("WizardPage", "Download"))
        self.deck_list_browse_button.setToolTip(_translate("WizardPage", "Opens a file picker and lets you load a deck file from disk."))
        self.deck_list_browse_button.setText(_translate("WizardPage", "Select deck list file"))
        self.deck_list.setPlaceholderText(_translate("WizardPage", "Paste your deck list here or select a file using the button above."))
        self.print_guessing_enable.setToolTip(_translate("WizardPage", "If checked, choose an arbitrary printing, if a unique printing is not identified.\n"
"If unchecked, each ambiguous card is ignored and reported as unrecognized."))
        self.print_guessing_enable.setText(_translate("WizardPage", "Guess printings for ambiguous entries in the deck list"))
        self.print_guessing_prefer_already_downloaded.setToolTip(_translate("WizardPage", "When an exact printing is not determined or card translation is requested, choose a printing that is already downloaded, if possible.\n"
"Enabling this can potentially save disk space and download volume, based on the images already downloaded."))
        self.print_guessing_prefer_already_downloaded.setText(_translate("WizardPage", "When guessing or translating cards, prefer printings with already downloaded images"))
