# Generated by Django 4.2.2 on 2023-06-27 12:01

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djangocms_text_ckeditor.fields
import filer.fields.file
import filer.fields.image


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# djangocms_fomantic_ui.migrations.0024_auto_20180906_1909

class Migration(migrations.Migration):

    replaces = [('djangocms_fomantic_ui', '0001_initial'), ('djangocms_fomantic_ui', '0002_auto_20180426_1429'), ('djangocms_fomantic_ui', '0003_auto_20180427_1438'), ('djangocms_fomantic_ui', '0004_accordionpluginmodel_accordion'), ('djangocms_fomantic_ui', '0005_embed_embedmodel'), ('djangocms_fomantic_ui', '0006_auto_20180507_2022'), ('djangocms_fomantic_ui', '0007_auto_20180529_1923'), ('djangocms_fomantic_ui', '0008_grid_gridcolumn_gridcolumnmodel_gridmodel_row_rowmodel_squashed_0017_auto_20180605_1716'), ('djangocms_fomantic_ui', '0009_message_segment'), ('djangocms_fomantic_ui', '0010_auto_20180606_2051_squashed_0011_column_grid_row'), ('djangocms_fomantic_ui', '0011_auto_20180607_1227'), ('djangocms_fomantic_ui', '0012_auto_20180607_1613'), ('djangocms_fomantic_ui', '0013_auto_20180607_1748'), ('djangocms_fomantic_ui', '0014_segment'), ('djangocms_fomantic_ui', '0015_auto_20180607_1819'), ('djangocms_fomantic_ui', '0016_auto_20180730_1555'), ('djangocms_fomantic_ui', '0017_auto_20180730_1602'), ('djangocms_fomantic_ui', '0018_auto_20180816_1727'), ('djangocms_fomantic_ui', '0019_auto_20180820_1908_squashed_0029_auto_20180822_1522'), ('djangocms_fomantic_ui', '0020_auto_20180823_1531_squashed_0025_auto_20180903_1716'), ('djangocms_fomantic_ui', '0021_auto_20180906_1705'), ('djangocms_fomantic_ui', '0022_auto_20180906_1716_squashed_0023_auto_20180906_1810'), ('djangocms_fomantic_ui', '0023_auto_20180906_1908'), ('djangocms_fomantic_ui', '0024_auto_20180906_1909'), ('djangocms_fomantic_ui', '0025_auto_20180906_2034'), ('djangocms_fomantic_ui', '0026_auto_20180906_2053'), ('djangocms_fomantic_ui', '0027_auto_20180906_2217'), ('djangocms_fomantic_ui', '0028_auto_20180906_2224'), ('djangocms_fomantic_ui', '0029_auto_20180906_2230'), ('djangocms_fomantic_ui', '0030_auto_20180920_1421_squashed_0031_auto_20180920_1800'), ('djangocms_fomantic_ui', '0031_auto_20180928_0031_squashed_0037_auto_20181214_1918'), ('djangocms_fomantic_ui', '0032_auto_20181217_2054'), ('djangocms_fomantic_ui', '0033_column_no_padding'), ('djangocms_fomantic_ui', '0034_column_hide_on_mobile'), ('djangocms_fomantic_ui', '0035_stepscontainermodel_tablet_stackable'), ('djangocms_fomantic_ui', '0036_accordion_highlighted_background_colour'), ('djangocms_fomantic_ui', '0037_auto_20190625_1527'), ('djangocms_fomantic_ui', '0038_auto_20190625_1648'), ('djangocms_fomantic_ui', '0039_staffmember'), ('djangocms_fomantic_ui', '0040_auto_20190805_2053'), ('djangocms_fomantic_ui', '0041_auto_20191004_1834'), ('djangocms_fomantic_ui', '0042_staffmember_title'), ('djangocms_fomantic_ui', '0043_staffmember_publish'), ('djangocms_fomantic_ui', '0044_HTMLField'), ('djangocms_fomantic_ui', '0045_event'), ('djangocms_fomantic_ui', '0046_auto_20200728_1700_squashed_0049_auto_20200729_1359'), ('djangocms_fomantic_ui', '0047_tabs_container_colour'), ('djangocms_fomantic_ui', '0048_auto_20211115_1936'), ('djangocms_fomantic_ui', '0049_embed_hash'), ('djangocms_fomantic_ui', '0050_alter_accordion_cmsplugin_ptr_and_more'), ('djangocms_fomantic_ui', '0051_alter_staffmembertranslation_unique_together_and_more'), ('djangocms_fomantic_ui', '0052_delete_event')]

    initial = True

    dependencies = [
        ('filer', '0011_auto_20190418_0137'),
        ('filer', '__first__'),
        ('cms', '0020_old_tree_cleanup'),
        ('cms', '0022_auto_20180620_1551'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccordionSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='name')),
                ('content', ckeditor.fields.RichTextField(blank=True, default='', verbose_name='content')),
                ('active', models.BooleanField(default=False, help_text='Visible after page has loaded?', verbose_name='active')),
            ],
        ),
        migrations.CreateModel(
            name='AccordionSectionluginModel',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_accordionsectionluginmodel', serialize=False, to='cms.cmsplugin')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djangocms_fomantic_ui.accordionsection')),
                ('active', models.BooleanField(default=False, help_text='Visible after page has loaded?', verbose_name='active')),
                ('content', ckeditor.fields.RichTextField(blank=True, default='', verbose_name='content')),
                ('title', models.CharField(default='-', max_length=255, verbose_name='name')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('content', ckeditor.fields.RichTextField(blank=True, default='', verbose_name='content')),
            ],
        ),
        migrations.CreateModel(
            name='CardPluginModel',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_cardpluginmodel', serialize=False, to='cms.cmsplugin')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djangocms_fomantic_ui.card')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='CardsContainerPluginModel',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_cardscontainerpluginmodel', serialize=False, to='cms.cmsplugin')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='Icon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='See https://semantic-ui.com/elements/icon.html', max_length=50, verbose_name='Semantic UI icon name')),
                ('disabled', models.BooleanField(default=False, verbose_name='disabled')),
                ('loading', models.BooleanField(default=False, verbose_name='loading')),
                ('fitted', models.BooleanField(default=False, verbose_name='fitted')),
                ('size', models.CharField(blank=True, choices=[('mini', 'mini'), ('tiny', 'tiny'), ('small', 'small'), ('medium', 'medium'), ('large', 'large'), ('big', 'big'), ('huge', 'huge'), ('massive', 'massive')], default='', max_length=7, verbose_name='size')),
                ('link', models.BooleanField(default=False, verbose_name='link')),
                ('flipped', models.CharField(blank=True, choices=[('', 'none'), ('horizontally', 'horizontally'), ('vertically', 'vertically')], default='', max_length=12, verbose_name='flipped')),
                ('rotated', models.CharField(blank=True, choices=[('', 'none'), ('clockwise', 'clockwise'), ('counterclockwise', 'counterclockwise')], default='', max_length=17, verbose_name='rotated')),
                ('circular', models.BooleanField(default=False, verbose_name='circular')),
                ('bordered', models.BooleanField(default=False, verbose_name='bordered')),
                ('colour', models.CharField(blank=True, choices=[('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black')], default='', max_length=6, verbose_name='colour')),
            ],
        ),
        migrations.CreateModel(
            name='IconPluginModel',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_iconpluginmodel', serialize=False, to='cms.cmsplugin')),
                ('icon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djangocms_fomantic_ui.icon')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='StepModel',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_stepmodel', serialize=False, to='cms.cmsplugin')),
                ('active', models.BooleanField(default=False, verbose_name='active')),
                ('completed', models.BooleanField(default=False, verbose_name='completed')),
                ('description', models.CharField(blank=True, default='', max_length=200, verbose_name='description')),
                ('disabled', models.BooleanField(default=False, verbose_name='disabled')),
                ('icon_name', models.CharField(blank=True, default='', help_text='See https://semantic-ui.com/elements/icon.html', max_length=50, verbose_name='Semantic UI icon name')),
                ('link', models.URLField(blank=True, default='')),
                ('title', models.CharField(blank=True, default='', max_length=50, verbose_name='title')),
                ('tab_text', ckeditor.fields.RichTextField(blank=True, default='')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='StepsContainerModel',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_stepscontainermodel', serialize=False, to='cms.cmsplugin')),
                ('attached', models.CharField(blank=True, choices=[('', 'none'), ('top', 'top'), ('bottom', 'bottom')], default='', max_length=6)),
                ('fluid', models.BooleanField(default=False, verbose_name='fluid')),
                ('ordered', models.BooleanField(default=False, verbose_name='ordered')),
                ('size', models.CharField(blank=True, choices=[('mini', 'mini'), ('tiny', 'tiny'), ('small', 'small'), ('medium', 'medium'), ('large', 'large'), ('big', 'big'), ('huge', 'huge'), ('massive', 'massive')], default='', max_length=7, verbose_name='size')),
                ('stackable', models.BooleanField(default=False, verbose_name='stackable')),
                ('unstackable', models.BooleanField(default=False, verbose_name='unstackable')),
                ('vertical', models.BooleanField(default=False, verbose_name='vertical')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='TabPluginModel',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_tabpluginmodel', serialize=False, to='cms.cmsplugin')),
                ('active', models.BooleanField(default=False, help_text='Visible after page has loaded?', verbose_name='active')),
                ('content', ckeditor.fields.RichTextField(blank=True, default='', verbose_name='content')),
                ('name', models.CharField(default='', max_length=100, verbose_name='name')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='TabsContainerPluginModel',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_tabscontainerpluginmodel', serialize=False, to='cms.cmsplugin')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='Accordion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('styled', models.BooleanField(default=True)),
                ('fluid', models.BooleanField(default=True)),
                ('inverted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='AccordionPluginModel',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_accordionpluginmodel', serialize=False, to='cms.cmsplugin')),
                ('accordion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='djangocms_fomantic_ui.accordion')),
                ('fluid', models.BooleanField(default=True)),
                ('inverted', models.BooleanField(default=False)),
                ('styled', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_message', serialize=False, to='cms.cmsplugin')),
                ('header', models.CharField(blank=True, max_length=100, verbose_name='name')),
                ('content', ckeditor.fields.RichTextField(blank=True, verbose_name='content')),
                ('colour', models.CharField(blank=True, choices=[('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black'), ('warning', 'Warning'), ('info', 'Info'), ('positive', 'Positive'), ('success', 'Success'), ('negative', 'Negative'), ('error', 'Error')], default='', max_length=8, verbose_name='colour')),
                ('attached', models.BooleanField(default=False, verbose_name='attached')),
                ('compact', models.BooleanField(default=False, verbose_name='compact')),
                ('dismissable', models.BooleanField(default=False, help_text='Can be closed by the user.', verbose_name='dismissable')),
                ('floating', models.BooleanField(default=False, verbose_name='floating')),
                ('hidden', models.BooleanField(default=False, verbose_name='hidden')),
                ('icon_name', models.CharField(blank=True, help_text='See https://semantic-ui.com/elements/icon.html', max_length=50, verbose_name='Semantic UI icon name')),
                ('size', models.CharField(blank=True, choices=[('mini', 'mini'), ('tiny', 'tiny'), ('small', 'small'), ('medium', 'medium'), ('large', 'large'), ('big', 'big'), ('huge', 'huge'), ('massive', 'massive')], default='', max_length=7, verbose_name='size')),
                ('visible', models.BooleanField(default=False, verbose_name='visible')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='Grid',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_grid', serialize=False, to='cms.cmsplugin')),
                ('nr_columns', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16)], default=None, help_text='Number of grid columns, usually you should leave this blank for getting a standard grid.', null=True, verbose_name='number of grid columns')),
                ('divided', models.CharField(blank=True, choices=[('divided', 'horizontally divided'), ('vertically divided', 'vertically divided')], default='', help_text='Horizontally divided: dividers between columns, requires rows; vertically divided: dividers between rows.', max_length=18, verbose_name='divided')),
                ('celled', models.CharField(blank=True, choices=[('celled', 'celled'), ('internally celled', 'internally celled')], default='', max_length=17, verbose_name='celled')),
                ('padded', models.BooleanField(default=False, verbose_name='padded')),
                ('relaxed', models.BooleanField(default=False, verbose_name='relaxed')),
                ('stackable', models.BooleanField(default=True, verbose_name='stackable')),
                ('text_alignment', models.CharField(blank=True, choices=[('left', 'left'), ('center', 'centre'), ('right', 'right')], default='', max_length=6)),
                ('equal_width', models.BooleanField(default=False, verbose_name='equal width')),
                ('centered', models.BooleanField(default=False, verbose_name='centered')),
                ('container', models.BooleanField(default=False, verbose_name='container')),
            ],
            options={
                'verbose_name': 'grid',
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='Container',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_container', serialize=False, to='cms.cmsplugin')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='Div',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_div', serialize=False, to='cms.cmsplugin')),
                ('background_colour_text', models.CharField(blank=True, help_text='In CSS notation like "#789abc88" or decimal', max_length=20, null=True, verbose_name='Background colour name or value')),
                ('background_colour_choice', models.CharField(blank=True, choices=[('#FFFFFF', 'White'), ('#F0F8FF', 'AliceBlue'), ('#F0FFFF', 'Azure'), ('#F5F5DC', 'Beige'), ('#FFF8DC', 'Cornsilk '), ('#FFFAF0', 'FloralWhite'), ('#D3D3D3', 'LightGrey'), ('#FFFAFA', 'Snow'), ('#F5F5F5', 'WhiteSmoke'), ('#f5f6f8', '#f5f6f8')], help_text='Here are some predefined colours.', max_length=9, null=True, verbose_name='or choose')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='DivContainer',
            fields=[
                ('div_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='djangocms_fomantic_ui.div')),
            ],
            options={
                'abstract': False,
            },
            bases=('djangocms_fomantic_ui.div',),
        ),
        migrations.CreateModel(
            name='Column',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_column', serialize=False, to='cms.cmsplugin')),
                ('width', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16)], default=None, help_text='number of grid units for this column, eg. 4 out of 12 for one third.', null=True, verbose_name='column width')),
                ('colour', models.CharField(blank=True, choices=[('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black')], default='', help_text='only with padded grid', max_length=6, verbose_name='colour')),
                ('floated', models.CharField(blank=True, choices=[('left', 'left'), ('right', 'right')], default='', max_length=5)),
                ('text_alignment', models.CharField(blank=True, choices=[('left', 'left'), ('center', 'centre'), ('right', 'right')], default='', max_length=6)),
            ],
            options={
                'verbose_name': 'column',
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='Row',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_row', serialize=False, to='cms.cmsplugin')),
                ('nr_columns', models.PositiveSmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16)], default=None, help_text='Number of grid column units, Actual number of columns can be smaller.', null=True, verbose_name='number of grid columns')),
                ('stretched', models.BooleanField(default=False, help_text='A row can stretch its contents to take up the entire column height', verbose_name='stretched')),
                ('colour', models.CharField(blank=True, choices=[('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black')], default='', help_text='only with padded grid', max_length=6, verbose_name='colour')),
                ('text_alignment', models.CharField(blank=True, choices=[('left', 'left'), ('center', 'centre'), ('right', 'right')], default='', max_length=6)),
                ('doubling', models.BooleanField(default=False, verbose_name='doubling')),
            ],
            options={
                'verbose_name': 'row',
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='Button',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_button', serialize=False, to='cms.cmsplugin')),
                ('text', models.CharField(blank=True, max_length=50)),
                ('link', models.URLField(blank=True)),
                ('colour', models.CharField(blank=True, choices=[('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black')], default='', max_length=6, verbose_name='colour')),
                ('visible_content', models.CharField(blank=True, max_length=50, verbose_name='Visible content')),
                ('hidden_content', models.CharField(blank=True, max_length=50, verbose_name='Hidden content')),
                ('basic', models.BooleanField(verbose_name='Basic')),
                ('inverted', models.BooleanField(verbose_name='Inverted')),
                ('state', models.CharField(blank=True, choices=[('active', 'Active'), ('disabled', 'Disabled'), ('loading', 'Loading')], max_length=8)),
                ('size', models.CharField(blank=True, choices=[('mini', 'mini'), ('tiny', 'tiny'), ('small', 'small'), ('medium', 'medium'), ('large', 'large'), ('big', 'big'), ('huge', 'huge'), ('massive', 'massive')], default='', max_length=7, verbose_name='size')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='Buttons',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_buttons', serialize=False, to='cms.cmsplugin')),
                ('icon_buttons', models.BooleanField(verbose_name='Icon buttons')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_statistic', serialize=False, to='cms.cmsplugin')),
                ('colour', models.CharField(blank=True, choices=[('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black')], default='', max_length=6, verbose_name='colour')),
                ('value_text', models.CharField(blank=True, max_length=50, verbose_name='Value as text')),
                ('label', models.CharField(max_length=50, verbose_name='Label')),
                ('horizontal', models.BooleanField(verbose_name='Horizontal')),
                ('inverted', models.BooleanField(default=False)),
                ('value_float', models.FloatField(blank=True, null=True, verbose_name='Value as floating number')),
                ('value_int', models.IntegerField(blank=True, null=True, verbose_name='Value as integer')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='Statistics',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_statistics', serialize=False, to='cms.cmsplugin')),
                ('horizontal', models.BooleanField(default=False, verbose_name='horizontal')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='Embed',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_embed', serialize=False, to='cms.cmsplugin')),
                ('title', models.CharField(blank=True, help_text='Currently only displayed for editors. ', max_length=100, verbose_name='title')),
                ('source', models.CharField(blank=True, choices=[('youtube', 'Youtube'), ('vimeo', 'Vimeo'), ('', 'custom')], default='youtube', max_length=7, verbose_name='source')),
                ('medium_id', models.CharField(blank=True, help_text='id of Youtube or Vimeo video', max_length=20, verbose_name='medium id')),
                ('url', models.URLField(blank=True, help_text='Fill in unless you choose a predefined data source.', verbose_name='URL to be embedded')),
                ('icon', models.CharField(blank=True, default='', help_text='Choose name from https://semantic-ui.com/elements/icon.html or leave empty for standard play circle icon.', max_length=50, verbose_name='play icon')),
                ('width_value', models.PositiveSmallIntegerField(blank=True, default=640, null=True, verbose_name='width')),
                ('width_unit', models.CharField(choices=[('%', '%'), ('px', 'px')], default='px', max_length=2)),
                ('height_value', models.PositiveSmallIntegerField(blank=True, default=360, null=True, verbose_name='height')),
                ('height_unit', models.CharField(choices=[('%', '%'), ('px', 'px')], default='px', max_length=2)),
                ('placeholder_image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.FILER_IMAGE_MODEL, verbose_name='placeholder image')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='Reveal',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_reveal', serialize=False, to='cms.cmsplugin')),
                ('image_size', models.CharField(blank=True, choices=[('mini', 'mini'), ('tiny', 'tiny'), ('small', 'small'), ('medium', 'medium'), ('large', 'large'), ('big', 'big'), ('huge', 'huge'), ('massive', 'massive')], default='small', max_length=7, verbose_name='size')),
                ('effect', models.CharField(choices=[('fade', 'fade'), ('move', 'move left'), ('move right', 'move right'), ('move up', 'move up'), ('move down', 'move down'), ('circular rotate', 'circular rotate right'), ('circular rotate left', 'circular rotate left')], max_length=20, verbose_name='effect')),
                ('hidden_image', filer.fields.image.FilerImageField(help_text='Image is hidden after loading and becomes visible after hovering.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hidden_image_reveal', to=settings.FILER_IMAGE_MODEL, verbose_name='hidden image')),
                ('visible_image', filer.fields.image.FilerImageField(help_text='Image is visible after loading.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visible_image_reveal', to=settings.FILER_IMAGE_MODEL, verbose_name='visible image')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.CreateModel(
            name='Segment',
            fields=[
                ('cmsplugin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_segment', serialize=False, to='cms.cmsplugin')),
                ('colour', models.CharField(blank=True, choices=[('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black')], default='', max_length=6, verbose_name='colour')),
                ('raised', models.BooleanField(default=False, help_text='A segment may be formatted to raise above the page.', verbose_name='raised')),
                ('stacked', models.BooleanField(default=False, help_text='A segment can be formatted to show it contains multiple pages.', verbose_name='stacked')),
                ('piled', models.BooleanField(default=False, help_text='A segment can be formatted to look like a pile of pages', verbose_name='piled')),
                ('vertical', models.BooleanField(default=False, help_text='A vertical segment formats content to be aligned as part of a vertical group.', verbose_name='vertical')),
                ('disabled', models.BooleanField(default=False, help_text='A segment may show its content is disabled.', verbose_name='disabled')),
                ('loading', models.BooleanField(default=False, help_text='A segment may show its content is being loaded.', verbose_name='loading')),
                ('attached', models.CharField(blank=True, choices=[('bottom attached', 'bottom attached'), ('top attached', 'top attached'), ('attached', 'attached')], default='', max_length=15, verbose_name='attached')),
                ('padded', models.BooleanField(default=False, help_text='padded', verbose_name='stacked')),
                ('compact', models.BooleanField(default=False, verbose_name='compact')),
                ('inverted', models.BooleanField(default=False, verbose_name='inverted')),
                ('emphasis', models.CharField(blank=True, choices=[('tertiary', 'tertiary'), ('secondary', 'secondary')], default='', max_length=9, verbose_name='emphasis')),
                ('circular', models.BooleanField(default=False, verbose_name='circular')),
                ('clearing', models.BooleanField(default=False, help_text='clear floated content', verbose_name='clearing')),
                ('floated', models.CharField(blank=True, choices=[('left', 'left'), ('right', 'right')], default='', max_length=5)),
                ('text_alignment', models.CharField(blank=True, choices=[('left', 'left'), ('center', 'centre'), ('right', 'right')], default='', max_length=6)),
                ('basic', models.BooleanField(default=False, help_text='basic', verbose_name='stacked')),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.cmsplugin',),
        ),
        migrations.RemoveField(
            model_name='accordionpluginmodel',
            name='accordion',
        ),
        migrations.RemoveField(
            model_name='accordionsectionluginmodel',
            name='section',
        ),
        migrations.AlterField(
            model_name='segment',
            name='attached',
            field=models.CharField(blank=True, choices=[('attached', 'attached'), ('top attached', 'top attached'), ('bottom attached', 'bottom attached')], default='', max_length=15, verbose_name='attached'),
        ),
        migrations.DeleteModel(
            name='Accordion',
        ),
        migrations.DeleteModel(
            name='AccordionSection',
        ),
        migrations.RenameModel(
            old_name='AccordionPluginModel',
            new_name='Accordion',
        ),
        migrations.RenameModel(
            old_name='AccordionSectionluginModel',
            new_name='AccordionSection',
        ),
        migrations.AlterField(
            model_name='accordion',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_accordion', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='accordionsection',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='djangocms_fomantic_ui_accordionsection', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='segment',
            name='attached',
            field=models.CharField(blank=True, choices=[('bottom attached', 'bottom attached'), ('top attached', 'top attached'), ('attached', 'attached')], default='', max_length=15, verbose_name='attached'),
        ),
        migrations.AlterField(
            model_name='accordionsection',
            name='content',
            field=ckeditor.fields.RichTextField(blank=True, verbose_name='content'),
        ),
        migrations.AlterField(
            model_name='button',
            name='size',
            field=models.CharField(blank=True, choices=[('mini', 'mini'), ('tiny', 'tiny'), ('small', 'small'), ('medium', 'medium'), ('large', 'large'), ('big', 'big'), ('huge', 'huge'), ('massive', 'massive')], max_length=7, verbose_name='size'),
        ),
        migrations.AlterField(
            model_name='card',
            name='content',
            field=ckeditor.fields.RichTextField(blank=True, verbose_name='content'),
        ),
        migrations.AlterField(
            model_name='embed',
            name='icon',
            field=models.CharField(blank=True, help_text='Choose name from https://semantic-ui.com/elements/icon.html or leave empty for standard play circle icon.', max_length=50, verbose_name='play icon'),
        ),
        migrations.AlterField(
            model_name='icon',
            name='colour',
            field=models.CharField(blank=True, choices=[('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black')], max_length=6, verbose_name='colour'),
        ),
        migrations.AlterField(
            model_name='icon',
            name='flipped',
            field=models.CharField(blank=True, choices=[('', 'none'), ('horizontally', 'horizontally'), ('vertically', 'vertically')], max_length=12, verbose_name='flipped'),
        ),
        migrations.AlterField(
            model_name='icon',
            name='rotated',
            field=models.CharField(blank=True, choices=[('', 'none'), ('clockwise', 'clockwise'), ('counterclockwise', 'counterclockwise')], max_length=17, verbose_name='rotated'),
        ),
        migrations.AlterField(
            model_name='icon',
            name='size',
            field=models.CharField(blank=True, choices=[('mini', 'mini'), ('tiny', 'tiny'), ('small', 'small'), ('medium', 'medium'), ('large', 'large'), ('big', 'big'), ('huge', 'huge'), ('massive', 'massive')], max_length=7, verbose_name='size'),
        ),
        migrations.AlterField(
            model_name='message',
            name='size',
            field=models.CharField(blank=True, choices=[('mini', 'mini'), ('tiny', 'tiny'), ('small', 'small'), ('medium', 'medium'), ('large', 'large'), ('big', 'big'), ('huge', 'huge'), ('massive', 'massive')], max_length=7, verbose_name='size'),
        ),
        migrations.AlterField(
            model_name='segment',
            name='attached',
            field=models.CharField(blank=True, choices=[('bottom attached', 'bottom attached'), ('top attached', 'top attached'), ('attached', 'attached')], max_length=15, verbose_name='attached'),
        ),
        migrations.AlterField(
            model_name='segment',
            name='colour',
            field=models.CharField(blank=True, choices=[('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black')], max_length=6, verbose_name='colour'),
        ),
        migrations.AlterField(
            model_name='segment',
            name='emphasis',
            field=models.CharField(blank=True, choices=[('secondary', 'secondary'), ('tertiary', 'tertiary')], max_length=9, verbose_name='emphasis'),
        ),
        migrations.AlterField(
            model_name='segment',
            name='floated',
            field=models.CharField(blank=True, choices=[('left', 'left'), ('right', 'right')], max_length=5),
        ),
        migrations.AlterField(
            model_name='segment',
            name='text_alignment',
            field=models.CharField(blank=True, choices=[('left', 'left'), ('center', 'centre'), ('right', 'right')], max_length=6),
        ),
        migrations.AlterField(
            model_name='statistic',
            name='colour',
            field=models.CharField(blank=True, choices=[('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black')], max_length=6, verbose_name='colour'),
        ),
        migrations.AlterField(
            model_name='stepmodel',
            name='description',
            field=models.CharField(blank=True, max_length=200, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='stepmodel',
            name='title',
            field=models.CharField(blank=True, max_length=50, verbose_name='title'),
        ),
        migrations.AlterField(
            model_name='stepscontainermodel',
            name='attached',
            field=models.CharField(blank=True, choices=[('', 'none'), ('top', 'top'), ('bottom', 'bottom')], max_length=6),
        ),
        migrations.AlterField(
            model_name='stepscontainermodel',
            name='size',
            field=models.CharField(blank=True, choices=[('mini', 'mini'), ('tiny', 'tiny'), ('small', 'small'), ('medium', 'medium'), ('large', 'large'), ('big', 'big'), ('huge', 'huge'), ('massive', 'massive')], max_length=7, verbose_name='size'),
        ),
        migrations.AlterField(
            model_name='tabpluginmodel',
            name='content',
            field=ckeditor.fields.RichTextField(blank=True, verbose_name='content'),
        ),
        migrations.AlterField(
            model_name='segment',
            name='attached',
            field=models.CharField(blank=True, choices=[('top attached', 'top attached'), ('attached', 'attached'), ('bottom attached', 'bottom attached')], max_length=15, verbose_name='attached'),
        ),
        migrations.AlterField(
            model_name='segment',
            name='emphasis',
            field=models.CharField(blank=True, choices=[('tertiary', 'tertiary'), ('secondary', 'secondary')], max_length=9, verbose_name='emphasis'),
        ),
        migrations.AlterField(
            model_name='reveal',
            name='effect',
            field=models.CharField(choices=[('fade', 'fade'), ('move', 'move left'), ('move right', 'move right'), ('move up', 'move up'), ('move down', 'move down'), ('circular rotate', 'circular rotate right'), ('circular rotate left', 'circular rotate left')], default='fade', max_length=20, verbose_name='effect'),
        ),
        migrations.AlterField(
            model_name='reveal',
            name='image_size',
            field=models.CharField(blank=True, choices=[('mini', 'mini'), ('tiny', 'tiny'), ('small', 'small'), ('medium', 'medium'), ('large', 'large'), ('big', 'big'), ('huge', 'huge'), ('massive', 'massive')], default='medium', max_length=7, verbose_name='size'),
        ),
        migrations.AlterField(
            model_name='segment',
            name='attached',
            field=models.CharField(blank=True, choices=[('bottom attached', 'bottom attached'), ('top attached', 'top attached'), ('attached', 'attached')], max_length=15, verbose_name='attached'),
        ),
        migrations.AlterField(
            model_name='segment',
            name='emphasis',
            field=models.CharField(blank=True, choices=[('secondary', 'secondary'), ('tertiary', 'tertiary')], max_length=9, verbose_name='emphasis'),
        ),
        migrations.AlterField(
            model_name='segment',
            name='attached',
            field=models.CharField(blank=True, choices=[('top attached', 'top attached'), ('attached', 'attached'), ('bottom attached', 'bottom attached')], max_length=15, verbose_name='attached'),
        ),
        migrations.AlterField(
            model_name='segment',
            name='emphasis',
            field=models.CharField(blank=True, choices=[('tertiary', 'tertiary'), ('secondary', 'secondary')], max_length=9, verbose_name='emphasis'),
        ),
        migrations.AlterField(
            model_name='segment',
            name='emphasis',
            field=models.CharField(blank=True, choices=[('secondary', 'secondary'), ('tertiary', 'tertiary')], max_length=9, verbose_name='emphasis'),
        ),
        migrations.AddField(
            model_name='column',
            name='no_padding',
            field=models.BooleanField(default=False, verbose_name='no padding'),
        ),
        migrations.AddField(
            model_name='column',
            name='hide_on_mobile',
            field=models.BooleanField(default=False, verbose_name='Hide on mobile devices'),
        ),
        migrations.AddField(
            model_name='stepscontainermodel',
            name='tablet_stackable',
            field=models.BooleanField(default=False, verbose_name='tablet stackable'),
        ),
        migrations.AddField(
            model_name='embed',
            name='use_placeholder',
            field=models.BooleanField(default=True, help_text='A placeholder image is shown until users click on it to load the code.', verbose_name='Show placeholder image instead of loading code immediately'),
        ),
        migrations.AddField(
            model_name='accordion',
            name='highlighted_background_colour',
            field=models.CharField(blank=True, max_length=20, verbose_name='CSS compliant Colour code or name'),
        ),
        migrations.AlterField(
            model_name='accordionsection',
            name='content',
            field=djangocms_text_ckeditor.fields.HTMLField(blank=True, verbose_name='content'),
        ),
        migrations.AlterField(
            model_name='card',
            name='content',
            field=djangocms_text_ckeditor.fields.HTMLField(blank=True, verbose_name='content'),
        ),
        migrations.AlterField(
            model_name='message',
            name='content',
            field=djangocms_text_ckeditor.fields.HTMLField(blank=True, verbose_name='content'),
        ),
        migrations.AlterField(
            model_name='stepmodel',
            name='tab_text',
            field=djangocms_text_ckeditor.fields.HTMLField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='tabpluginmodel',
            name='content',
            field=djangocms_text_ckeditor.fields.HTMLField(blank=True, verbose_name='content'),
        ),
        migrations.RenameField(
            model_name='embed',
            old_name='url',
            new_name='external_url',
        ),
        migrations.AlterField(
            model_name='embed',
            name='source',
            field=models.CharField(blank=True, choices=[('youtube', 'Youtube'), ('vimeo', 'Vimeo'), ('', 'custom'), ('file', 'file')], default='youtube', max_length=7, verbose_name='source'),
        ),
        migrations.AlterField(
            model_name='embed',
            name='placeholder_image',
            field=filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='placeholder_image_embed', to=settings.FILER_IMAGE_MODEL, verbose_name='placeholder image'),
        ),
        migrations.AddField(
            model_name='embed',
            name='video_file',
            field=filer.fields.file.FilerFileField(blank=True, help_text='You can upload a video file instead of linking an external resource', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='video_file_embed', to='filer.file', verbose_name='video file'),
        ),
        migrations.AlterField(
            model_name='embed',
            name='source',
            field=models.CharField(blank=True, choices=[('youtube', 'Youtube'), ('vimeo', 'Vimeo'), ('', 'custom')], default='youtube', max_length=7, verbose_name='source'),
        ),
        migrations.AddField(
            model_name='button',
            name='target',
            field=models.CharField(blank=True, choices=[('_self', '_self'), ('_blank', '_blank'), ('_parent', '_parent'), ('_top', '_top')], max_length=7),
        ),
        migrations.AddField(
            model_name='tabscontainerpluginmodel',
            name='inverted',
            field=models.BooleanField(default=True, help_text='coloured background', verbose_name='inverted'),
        ),
        migrations.AddField(
            model_name='accordion',
            name='highlighted_background_colour_choice',
            field=models.CharField(blank=True, choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black')], default='primary', max_length=9, verbose_name='Background colour (CSS definition, not Semantic UI) of highlighted title (active or hover)'),
        ),
        migrations.AlterField(
            model_name='button',
            name='colour',
            field=models.CharField(blank=True, choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black')], default='', max_length=9, verbose_name='colour'),
        ),
        migrations.AlterField(
            model_name='column',
            name='colour',
            field=models.CharField(blank=True, choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black')], default='', help_text='only with padded grid', max_length=9, verbose_name='colour'),
        ),
        migrations.AlterField(
            model_name='icon',
            name='colour',
            field=models.CharField(blank=True, choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black')], max_length=9, verbose_name='colour'),
        ),
        migrations.AlterField(
            model_name='message',
            name='colour',
            field=models.CharField(blank=True, choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black'), ('warning', 'Warning'), ('info', 'Info'), ('positive', 'Positive'), ('success', 'Success'), ('negative', 'Negative'), ('error', 'Error')], default='', max_length=9, verbose_name='colour'),
        ),
        migrations.AlterField(
            model_name='row',
            name='colour',
            field=models.CharField(blank=True, choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black')], default='', help_text='only with padded grid', max_length=9, verbose_name='colour'),
        ),
        migrations.AlterField(
            model_name='segment',
            name='colour',
            field=models.CharField(blank=True, choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black')], max_length=9, verbose_name='colour'),
        ),
        migrations.AlterField(
            model_name='statistic',
            name='colour',
            field=models.CharField(blank=True, choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black')], max_length=9, verbose_name='colour'),
        ),
        migrations.AddField(
            model_name='tabscontainerpluginmodel',
            name='colour',
            field=models.CharField(blank=True, choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('red', 'Red'), ('orange', 'Orange'), ('yellow', 'Yellow'), ('olive', 'Olive'), ('green', 'Green'), ('teal', 'Teal'), ('blue', 'Blue'), ('violet', 'Violet'), ('purple', 'Purple'), ('pink', 'Pink'), ('brown', 'Brown'), ('grey', 'Grey'), ('black', 'Black')], default='primary', max_length=9, verbose_name='Background colour'),
        ),
        migrations.AddField(
            model_name='embed',
            name='hash',
            field=models.CharField(blank=True, help_text='Hash for Vimeo, 10 hex digits after “h=”', max_length=10, verbose_name='hash'),
        ),
        migrations.AlterField(
            model_name='accordion',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='accordionsection',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='button',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='buttons',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='cardpluginmodel',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='cardscontainerpluginmodel',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='column',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='container',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='div',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='embed',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='grid',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='iconpluginmodel',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='message',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='reveal',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='row',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='segment',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='statistic',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='statistics',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='stepmodel',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='stepscontainermodel',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='tabpluginmodel',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='tabscontainerpluginmodel',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(app_label)s_%(class)s', serialize=False, to='cms.cmsplugin'),
        ),
    ]
