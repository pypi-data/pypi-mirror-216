Metadata-Version: 2.1
Name: django-oasis4-auth
Version: 1.1.0
Summary: Oasis 4 Authorization System for django
Author-email: Mario Cerón <mario.ceron@cqinversiones.co>
License:                                     CQ INVERSIONES S.A.S.
                                      CONTRATO DE LICENCIA DE SOFTWARE
                                                    NO OEM
                                             (Version 2.0 - 2023)
        
        
        IMPORTANTE: LÉASE ANTES DE COPIAR, INSTALAR O UTILIZAR.
        
        No copie, instale ni utilice este software y cualquier material asociado (colectivamente, el "Software") proporcionado
        con este contrato de licencia ("Contrato") hasta que haya leído atentamente los siguientes términos y condiciones.
        
        Al copiar, instalar o utilizar el Software de otro modo, acepta que estará sujeto por los términos de este Contrato.
        Si no está de acuerdo con los términos de este Contrato, no copie, instale ni utilice el Software.
        
        RESTRICCIONES DE LA LICENCIA. Usted NO podrá: (i) usar o copiar el Software excepto según lo estipulado en este contrato;
        (ii) alquilar o arrendar el Software a un tercero; (iii) asignar este contrato o transferir el Software sin el
        consentimiento expreso por escrito de CQ INVERSIONES S.A.S.; (iv) modificar, adaptar o traducir el Software, en todo o
        en parte, excepto según lo estipulado en este contrato; (v) realizar operaciones de ingeniería inversa, descompilar o
        desensamblar el Software; (vi) intentar modificar o manipular el funcionamiento normal de un gestor de licencias que
        regule el uso del Software; (vii) distribuir, sublicenciar o transferir la forma de código fuente de cualquier
        componente del Software y sus derivados a un tercero sin el consentimiento expreso por escrito de CQ INVERSIONES S.A.S.;
        (viii) permitir, autorizar, licenciar o sublicenciar a un tercero a ver o utilizar el código fuente; (ix) modificar o
        distribuir el código fuente o el Software para que cualquier parte del mismo pase a estar sujeta a una licencia
        excluida. (Una "licencia excluida" es aquélla que requiere, como condición de uso, modificación o distribución, que
        (a) el código debe revelarse o distribuirse en la forma de código fuente; o (b) otros tienen el derecho de modificarlo.);
        (c) utilizar o incluir el código fuente o el software en programas engañosos, maliciosos o ilegales.
        
        NO EXISTEN OTROS DERECHOS. CQ INVERSIONES S.A.S. no le concede otros derechos o licencias, de manera expresa o
        implícita, con respecto a cualquier información de titularidad o patente, copyright, topografía de circuito integrado,
        marca comercial, secretos comerciales, u otros derechos de titularidad de propiedad intelectual o controlados por
        CQ INVERSIONES S.A.S., a excepción de lo que se establece expresamente en este Contrato. Salvo lo previsto expresamente
        en este documento, no se le concede ninguna licencia o derecho, de manera directa o implícita, incentivo, impedimento
        legal o de otra manera. Específicamente, CQ INVERSIONES S.A.S. no le concede ningún derecho expreso o implícito bajo
        patentes, copyrights, marcas comerciales u otros derechos de propiedad intelectual de CQ INVERSIONES S.A.S. o de
        terceros.
        
        PROPIEDAD DEL MATERIAL Y LOS "COPYRIGHTS". El Software se otorga con licencia, no se vende. CQ INVERSIONES S.A.S.
        mantiene el título de propiedad de todas las copias del Software. El Software dispone de sus correspondientes derechos
        de autor, y está amparado por la legislación colombiama, estadounidense y de otros países, así como por disposiciones
        de tratados internacionales. No está permitido eliminar del Software ninguna nota sobre los derechos de autor.
        Acepta evitar cualquier copia no autorizada del Software. CQ INVERSIONES S.A.S. puede introducir modificaciones
        en el Software, o en elementos a los que se hace referencia en el mismo, en cualquier momento y sin previo aviso,
        sin tener obligación de prestar asistencia técnica o actualizar el Software.
        
        TÉRMINOS ADICIONALES PARA EL SOFTWARE PREVIO A LA VERSIÓN.  Si el Software que está instalando o utilizando bajo este
        contrato es una versión previa a la comercialización, o está etiquetada o representada de otra manera como versiones
        "alfa" o "beta" o "RC" del Software ("Software previo a la versión"), se aplican los términos siguientes. Hasta el
        extremo que cualquier disposición de esta Sección esté en conflicto con otro(s) término(s) o condición(es) de este
        Contrato respecto al Software previo a la versión, esta Sección prevalecerá sobre otro(s) término(s) o condición(es),
        pero sólo hasta el extremo necesario para resolver el conflicto. Entiende y reconoce que el Software es Software
        previo a la versión, no representa el Software final de CQ INVERSIONES S.A.S., y puede contener errores y otros
        problemas que podrían causar la pérdida de datos, fallos del sistema u otros errores. El Software previo a la versión
        se proporciona "como está" e CQ INVERSIONES S.A.S. rechaza toda garantía o responsabilidad hacia usted por cualquier
        daño causado por el uso del Software previo a la versión. Reconoce que CQ INVERSIONES S.A.S. no ha prometido que el
        Software previo a la versión se comercializará en el futuro, que CQ INVERSIONES S.A.S. no tiene ninguna obligación
        expresa o implícita hacia usted de comercializar el Software previo a la versión y que CQ INVERSIONES S.A.S. puede
        presentar Software que no sea compatible con el Software previo a la versión. Reconoce que la totalidad de cualquier
        investigación o desarrollo relacionado con el Software previo a la versión o con cualquier producto que utilice o esté
        asociado con el Software previo a la versión se realizará por su cuenta y riesgo. Si CQ INVERSIONES S.A.S. le ha
        proporcionado Software previo a la versión según los términos de un contrato escrito por separado, su uso del
        Software previo a la versión también está regido por dicho contrato.
        
        GARANTÍA LIMITADA DE SOPORTES.  Si CQ INVERSIONES S.A.S. ha entregado el Software en un soporte físico,
        CQ INVERSIONESS.A.S. garantiza que dicho soporte está libre de defectos físicos de material durante los noventa días
        después de la entrega. Si encuentra algún defecto semejante, devuelva el soporte a CQ INVERSIONES S.A.S. para
        reemplazarlo o para que CQ INVERSIONES S.A.S. le entregue el Software de otro modo, a discreción de
        CQ INVERSIONES S.A.S..
        
        EXCLUSIÓN DE OTRAS GARANTÍAS.  A EXCEPCIÓN DE LO ESTIPULADO ANTERIORMENTE, EL SOFTWARE SE FACILITA "TAL CUAL" SIN
        GARANTÍA EXPRESA O IMPLÍCITA DE NINGÚN TIPO, INCLUIDAS LAS GARANTÍAS DE COMERCIABILIDAD, NO INFRACCIÓN O ADECUACIÓN
        PARA UNA FINALIDAD CONCRETA. CQ INVERSIONES S.A.S. no garantiza ni asume responsabilidad en cuanto a la exactitud o
        integridad de cualquier información, texto, gráficos, enlaces u otros elementos contenidos en el Software.
        
        LIMITACIÓN DE RESPONSABILIDAD.  EN NINGÚN CASO NI CQ INVERSIONES S.A.S. NI SUS PROVEEDORES SERÁN RESPONSABLES POR
        DAÑO ALGUNO DERIVADO DEL USO DEL SOFTWARE, O DE NO PODER USARLO (INCLUSIVE, SIN LIMITACIÓN ALGUNA, POR LOS DAÑOS
        DERIVADOS DEL CESE DE LUCRO, DE LA INTERRUPCIÓN DE LA ACTIVIDAD O EL NEGOCIO, O DE LA PÉRDIDA DE DATOS O INFORMACIÓN),
        AUN SI CQ INVERSIONES S.A.S. HUBIERA SIDO ADVERTIDA DE DICHA POSIBILIDAD. EN CIERTAS JURISDICCIONES SE PROHÍBE LA EXCLUSIÓN O LIMITACIÓN DE RESPONSABILIDAD RESPECTO A GARANTÍAS IMPLÍCITAS O DAÑOS INDIRECTOS O CASUALES, POR LO QUE LAS LIMITACIONES MENCIONADAS PUEDEN NO SER APLICABLES EN SU CASO. ASIMISMO, ES POSIBLE QUE TENGA OTROS DERECHOS LEGALES QUE VARÍEN DE UNA JURISDICCIÓN A OTRA. En caso de que utilice el Software junto con un dispositivo virtual ("emulado") diseñado para aparecer como un producto de componente de CQ INVERSIONES S.A.S., reconoce que CQ INVERSIONES S.A.S. no es el autor ni el creador del dispositivo virtual ("emulado"). Entiende y reconoce que CQ INVERSIONES S.A.S. no hace ninguna declaración sobre el funcionamiento correcto del Software cuando se utiliza con un dispositivo virtual ("emulado"), que CQ INVERSIONES S.A.S. no diseñó el Software para que funcione conjuntamente con el dispositivo virtual ("emulado") y que el Software puede no ser capaz de corregir el funcionamiento conjuntamente con el dispositivo virtual ("emulado"). Acepta asumir el riesgo de que el Software no funcione de forma correcta conjuntamente con el dispositivo virtual ("emulado"). Acepta indemnizar y mantener a CQ INVERSIONES S.A.S., sus directores, subsidiarias y afiliados libres de toda responsabilidad contra cualquier demanda, costo, daño y gasto y honorarios razonables de abogados que surjan de, directa o indirectamente, cualquier reclamo por productos defectuosos, daños personales o muerte relacionadas con el uso no previsto o no autorizado del Software conjuntamente con el dispositivo virtual ("emulado"), incluso si dicha acción se basa en que CQ INVERSIONES S.A.S. fue negligente con respecto al diseño o fabricación del Software.
        
        USO NO AUTORIZADO. EL SOFTWARE NO ESTÁ DISEÑADO, PREVISTO O AUTORIZADO PARA SU USO EN CUALQUIER TIPO DE SISTEMA O
        APLICACIÓN EN LA QUE UN FALLO DE SOFTWARE PODRÍA CREAR UNA SITUACIÓN DONDE SE PRODUJERAN LESIONES PERSONALES O LA
        MUERTE (POR EJEMPLO, SISTEMAS MÉDICOS, DE SOPORTE VITAL O PARA SALVAR VIDAS). Si utiliza el Software para cualquier uso
        no previsto o no autorizado, deberá indemnizar y considerar sin responsabilidad a CQ INVERSIONES S.A.S. y sus directores,
        subsidiarias y afiliados contra cualquier demanda, costo, daño y gasto y honorarios razonables de abogados que surjan de,
        directa o indirectamente, cualquier reclamo por productos defectuosos, daños personales o muerte relacionadas con dicho
        uso no previsto o no autorizado, incluso si dicha acción se basa en que CQ INVERSIONES S.A.S. fue negligente con
        respecto al diseño o fabricación del componente.
        
        RESCISIÓN DE ESTE CONTRATO. Si infringe los términos de este Contrato, CQ INVERSIONES S.A.S. puede rescindirlo en
        cualquier momento. Tras la rescisión, usted deberá destruir inmediatamente el Software o devolver a CQ INVERSIONES S.A.S.
        todas las copias del mismo.
        
        LEGISLACIÓN APLICABLE. Las reclamaciones que surjan bajo este Contrato estarán regidas por las leyes del estado de
        California, independientemente de los principios de conflicto de leyes. Acepta que los términos de la Convención sobre
        contratos para la venta internacional de bienes de las Naciones Unidas no se aplican a este Contrato. Se prohíbe
        exportar el Software si dicho acto violara cualquier ley o reglamento aplicable sobre exportaciones. CQ INVERSIONES S.A.S.
        no está obligada por ningún otro contrato, a menos que éste se haya realizado por escrito y esté firmado por un
        representante autorizado de CQ INVERSIONES S.A.S..
        
        DERECHOS RESTRINGIDOS DEL ESTADO. El Software y la documentación incluidos se desarrollaron a cargo de una iniciativa
        privada y se proporcionan con "DERECHOS LIMITADOS". Su uso, reproducción o divulgación por el Gobierno está sujeto a
        las restricciones establecidas en FAR 52.227-14 y DFAR 252.227-7013 y siguientes o sus sucesoras. El uso de este
        producto por parte del Gobierno constituye el reconocimiento de los derechos de titularidad de CQ INVERSIONES S.A.S.
        sobre el mismo. El contratista o fabricante es CQ INVERSIONES S.A.S..
        
        IDIOMA; TRADUCCIONES. En el caso de que la versión en español de este Contrato esté acompañada por cualquier otra
        versión traducida a otro idioma, dicha versión traducida sólo se ofrece a título informativo y prevalecerá la versión
        en español.
        
Keywords: django,OASIS4
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3.9
Classifier: Development Status :: 5 - Production/Stable
Classifier: Framework :: Django
Classifier: Framework :: Django :: 4.1
Classifier: Environment :: Web Environment
Classifier: Operating System :: OS Independent
Classifier: Topic :: Internet :: WWW/HTTP
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE

[English](#oasis4-authentication-package-for-DJANGO&copy;)
# Módulo de autenticación OASIS4 para DJANGO&copy;
Este módulo permite a DJANGO&copy; interactuar con OASIS4 y realizar acciones como el registro de usuario y su autenticacíón, utilizando un sistema de dos pasos.

El módulo ofrece tres (3) servicios API para el registro de los usuarios, ingreso al sistema y validación del código de autorización.

## Versiones
* 1.1.0: Se elimina la dependencia del paquete zibanu.django.auth para el manejo de las señales. Depende de la versión 1.2.0 de zibanu-django.
* 1.0.7: Incorpora una tarea para la sincronización de los usuarios desde la tabla origen en OASIS4.
* 1.0.5: Corrige un bug que se presentaba con la autenticación anónima derivada de la actualización de librerías.
* 1.0.4: Corrige un bug que creaba el usuario en la tabla de usuarios ignorando el segundo nombre y apellido.

## APIs
* [Registro](#registro)
* [Acceso al sistema](#login-1)
* [Validación del código](#validate-1)

### *Registro*
Esta API permite realizar el proceso de registro de usuarios. El sistema valida el correo electrónico y el número
del documento de identificación del usuario contra los datos que existen en la base de datos de *OASIS4&copy;*.

El API se accede a través de https://<dominio>/<modulo>/register/ y recibe como parte de la solicitud HTTP un set
de datos en formato JSON con los parámetros requeridos para su funcionamiento.

#### Parámetros
* ***customer_id***: Número de identificación del cliente
* ***email***: Correo electrónico, debe ser el registrado en *OASIS4&copy;*.
* ***password***: El password asignado por el usuario en la forma de registro online.

#### Retorna
> El API retorna un objeto Response con el estado HTTP 200 si no existen errores y un objeto JSON.
````python
customer_data = {
    "first_name": "",
    "last_name": "",
    "location": "",
    "address": "",
    "phone": 0,
    "mobile": 0,
    "email": "",
    "customer_id": 0,
    "document_type": 0,
    "is_valid": True,
    "type": 0
}

data_return = {
    "token": "asdasdas",
    "data": customer_data
}
````

##### Objeto customer_data
* *first_name*: Nombre o nombres del usuario registrado en la base *OASIS4&copy;*.
* *last_name*: Apellidos registrados en la base de datos *OASIS4&copy;*.
* *location*: Nombre de la ciudad registrada en la base de datos *OASIS4&copy;*.
* *address*: Dirección registrada en la base de datos *OASIS4&copy;*.
* *phone*: Número telefónico registrado en la base de datos *OASIS4&copy;*.
* *mobile*: Número celular registrado en la base de datos *OASIS4&copy;*.
* *email*: Correo electrónico registrado en la base de datos *OASIS4&copy;*.
* *customer_id*: Documento de identificación registrado en la base de datos *OASIS4&copy;*.
* *document_type*: Tipo de documento registrado en la base de datos *OASIS4&copy;*.
* *is_valid*: Indica si el usuario se encuentra válido en la base de datos *OASIS4&copy;*.
* *type*: Código del tipo de usuario asociado.
  * 0: Sin relación
  * 1: Cliente
  * 2: Asociado

##### JSON data_return
> Diccionario de datos que se retorna a través del objeto Response HTTP.
* *token*: Token utilizado para la validación del segundo paso de autenticación
* *data*: Objeto que contiene los [datos básicos del cliente](#objeto-customerdata)

### *Login*
Este API realiza el proceso de autenticación de los usuarios a través de los parámetros "email" y "password". En caso de
que la autenticación sea exitosa, envía el código para el segundo paso de la autenticación.

El API se expone a través de https://<dominio>/<modulo>/login/ y recibe en formato JSON los siguientes parémtros.

#### Parámetros
* ***email***: Correo electrónico del usuario, previamente registrado, para la autenticación.
* ***password***: Clave del usuario

#### Retorna
> El API retorna un objeto *Response HTTP* con estado 200 si no existen errores y un objeto JSON.

````python
data_return = {
            "token": "asdkjahs"
        }
````

##### *JSON* data_return
> Objeto *JSON* que se envía a través del Response HTTP.

* *token*: Clave token para validar el código de autorización en el segundo paso.

### *Validate*
Este API realiza el proceso de autenticación con el token y el código de autorización enviado al correo electrónico.

El API se accede a travésde https://<domain>/<module>/validate/ y recibe un objeto JSON con los parámetros requeridos.

#### Parámetros
* ***token***: Clave token enviada desde el [login](#login-1) o [register](#registro)
* ***code***: Código de autorización enviado al correo electrónico.

### Retorna
> El API genera un objeto Response basado en la acción originaria y asociada al token. Si es exitoso el procdeso retorna
> un estado HTTP 200.

* Registro: El API solamente retorna el estado
* Acceso (Login): El API retorna el estado y un objeto JSON.

````python
data_return = {
    "token": "asdaskjhiuuh",
    "payload": {},
    "user": {
        "full_name": "",
        "document_id": 0,
        "type": ""
    }
}
````
* *token*: Java Web Token generado a partir de la autenticacion HTTP.
* *payload*: Carga de datos del JWT.
* *user*: Objeto con los datos básicos del usuario.
  * *full_name*: Nombre completo del usuario
  * *document_id*: Número del documento de identificación
  * *type*: Descriptivo del tipo de relación que contiene el cliente con la entidad.
***
[Spanish](#módulo-de-autenticación-oasis4-para-DJANGO&copy;)
# OASIS4 Authentication Package for DJANGO&copy;

This package allow to DJANGO&copy; interact with *OASIS4&copy;* and make actions like register and authenticate users for login, with a two steps authentication system. 

The package offers three API Endpoints for user registration, login user and authenticate code validation.

## Versions

* 1.0.7: Include a task to syn users from OASIS4 entity.
* 1.0.5: Fix a bug with anonymous authentication on login after upgrade libraries.
* 1.0.4: Fix a bug that create the username ignoring second name and first last name. 

## Endpoints
* [Register](#register)
* [Login](#login)
* [Validate](#validate)

### *Register*
This endpoint make a user registration process, validating the email and document id with *OASIS4* database

The endpoint is https://<domain>/<module>/register/ and receive a json body with some **required parameters**.

#### Parameters
* ***customer_id***: identification number registered at *OASIS4&copy;* database for validation purposes.
* ***email***: email previously registered at *OASIS4&copy* database.
* ***password***: password entered by user in the registration form.

#### Return
> The endpoint returns a response with **HTTP Status 200** if ok and json body.

```python
customer_data = {
    "first_name": "",
    "last_name": "",
    "location": "",
    "address": "",
    "phone": 0,
    "mobile": 0,
    "email": "",
    "customer_id": 0,
    "document_type": 0,
    "is_valid": True,
    "type": 0
}

data_return = {
    "token": "asdasdas",
    "data": customer_data
}
```
##### customer_data *object*:
> Set of features that represent a customer or partner.
* *first_name*: First name registered in *OASIS4&copy;* database.
* *last_name*: Last name registered in *OASIS4&copy;* database.
* *location*: City registered in *OASIS4&copy;* database.
* *address*: Address registered in *OASIS4&copy;* database.
* *phone*: Phone number registered in *OASIS4&copy;* database.
* *mobile*: Mobile phone number registered in *OASIS4&copy;* database.
* *email*: Email registered in *OASIS4&copy;* database.
* *customer_id*: ID number registered in *OASIS4&copy;* database.
* *document_type*: Document type from *OASIS4&copy;* database.
* *is_valid*: True if user is valid, otherwise False.
* *type*: User type in system:
  * 0 -> Not relationship with company.
  * 1 -> Customer relationship.
  * 2 -> Partner relationship.

##### data_return *JSON*
> Set of values to be returned through HTTP Response.
* *token*: Token to validate code at second pass authenticate.
* *data*: [Customer data object](#customerdata-object-)

### *Login*
This endpoint make a login authentication for users, and send an email with authorization code for second step authentication.

The endpoint is https://<domain>/<module>/login/ and receive a json body with **required parameters**:
#### Parameters
* ***email***: Email registered at system to authenticate.
* ***password***: User password

#### Return
> The endpoint returns a response object with **HTTP Status 200** if ok and json body.

````python
data_return = {
            "token": "asdkjahs"
        }
````

##### data_return *dict*
> Set of values to be returned through HTTP Response.
* *token*: Token to validate second step authorization code.

### *Validate*
This endpoint performs the authentication with the token and the authorization code sent to the email.

The endpoint is https://<domain>/<module>/validate/ and receive a json body with **required parameters**:

#### Parameters
* ***token***: Token received from [login](#login) or [register](#register) endpoints.
* ***code***: Authentication code received via email.

#### Return
> The endpoint return a Response based on the action that originates it with *HTTP Status 200* if ok.

* Register Action: The endpoint return only status code.
* Login Action: The endpoint return status code (200) and json body.

````python
data_return = {
    "token": str(token_data.access_token),
    "payload": token_data.payload,
    "user": {
        "full_name": self.__data.get_full_name(),
        "document_id": self.__data.profile.document_id,
        "type": self.__data.profile.type
    }
}
````
##### data_return *dict*
> Set of values to be return via HTTP Response.
* *token*: Java Web Token to authenticate HTTP Requests.
* *payload*: Java Web Token payload.
* *user*: Basic user information
  * *full_name*: User full name
  * *document_id*: Document id of user
  * *type*: Descriptive user type

