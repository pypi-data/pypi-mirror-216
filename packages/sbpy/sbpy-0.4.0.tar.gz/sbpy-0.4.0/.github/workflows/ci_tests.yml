# GitHub Actions workflow for testing and continuous integration.
#
# This file performs testing using tox and tox.ini to define and configure the test environments.

name: CI Tests

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:
    # branches: # only build on PRs against 'main' if you need to further limit when CI is run.
    #    - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  ARCH_ON_CI: "normal"
  IS_CRON: "false"

jobs:
  # Github Actions supports ubuntu, windows, and macos virtual environments:
  # https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
  tests:
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    with:
      setenv: |
        ARCH_ON_CI: "normal"
        IS_CRON: "false"
      submodules: false
      coverage: ''
      envs: |
        - name: Code style checks
          linux: codestyle

        - name: Python 3.11 with minimal dependencies and full coverage
          linux: py311-test-cov
          coverage: codecov

        - name: Python 3.10 with all optional dependencies
          linux: py310-test-alldeps
          
        - name: Python 3.8 with oldest supported versions
          linux: py38-test-oldestdeps
          coverage: codecov

  macos-tests:
    name: Python 3.10 with all optional dependencies (MacOS)
    runs-on: macos-latest
    env:
      ARCH_ON_CI: "normal"
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Set up gfortran on ${{ matrix.os }}
      if: runner.os == 'macos'
      run: |
        echo `which gfortran-11`
        sudo ln -sfn /usr/local/bin/gfortran-11 /usr/local/bin/gfortran
        gfortran --version
    - name: Install base dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Test with tox
      run: tox -e py310-test-alldeps
