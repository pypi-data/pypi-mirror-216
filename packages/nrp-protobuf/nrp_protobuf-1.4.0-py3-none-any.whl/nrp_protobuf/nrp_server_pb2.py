# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nrp_server.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from . import engine_grpc_pb2 as engine__grpc__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10nrp_server.proto\x12\x07NrpCore\x1a\x19google/protobuf/any.proto\x1a\x11\x65ngine_grpc.proto\"\x0e\n\x0c\x45mptyMessage\"\x1b\n\x0bJsonMessage\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\"9\n\x0fSimStateMessage\x12\x14\n\x0c\x63urrentState\x18\x01 \x01(\t\x12\x10\n\x08\x65rrorMsg\x18\x02 \x01(\t\"6\n\x08Response\x12*\n\x08simState\x18\x01 \x01(\x0b\x32\x18.NrpCore.SimStateMessage\"J\n\x11TrajectoryMessage\x12\x11\n\tdataIndex\x18\x01 \x01(\x05\x12\"\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x14.google.protobuf.Any\"\x85\x01\n\nTrajectory\x12:\n\x16jsonTrajectoryMessages\x18\x01 \x03(\x0b\x32\x1a.NrpCore.TrajectoryMessage\x12;\n\x17protoTrajectoryMessages\x18\x02 \x03(\x0b\x32\x1a.NrpCore.TrajectoryMessage\"i\n\x12InitializeResponse\x12*\n\x08simState\x18\x01 \x01(\x0b\x32\x18.NrpCore.SimStateMessage\x12\'\n\ntrajectory\x18\x02 \x01(\x0b\x32\x13.NrpCore.Trajectory\"t\n\tDataPacks\x12\x32\n\rjsonDataPacks\x18\x02 \x03(\x0b\x32\x1b.EngineGrpc.DataPackMessage\x12\x33\n\x0eprotoDataPacks\x18\x03 \x03(\x0b\x32\x1b.EngineGrpc.DataPackMessage\"\x8d\x01\n\x0fRunLoopResponse\x12*\n\x08simState\x18\x01 \x01(\x0b\x32\x18.NrpCore.SimStateMessage\x12\x10\n\x08\x64oneFlag\x18\x02 \x01(\x08\x12\x13\n\x0btimeoutFlag\x18\x03 \x01(\x08\x12\'\n\ntrajectory\x18\x04 \x01(\x0b\x32\x13.NrpCore.Trajectory\"N\n\x0eRunLoopMessage\x12\x15\n\rnumIterations\x18\x01 \x01(\x05\x12%\n\tdataPacks\x18\x02 \x01(\x0b\x32\x12.NrpCore.DataPacks\"5\n\x0cResetMessage\x12%\n\tdataPacks\x18\x01 \x01(\x0b\x32\x12.NrpCore.DataPacks\"d\n\rResetResponse\x12*\n\x08simState\x18\x01 \x01(\x0b\x32\x18.NrpCore.SimStateMessage\x12\'\n\ntrajectory\x18\x02 \x01(\x0b\x32\x13.NrpCore.Trajectory2\xfd\x02\n\x07NrpCore\x12\x42\n\ninitialize\x12\x15.NrpCore.EmptyMessage\x1a\x1b.NrpCore.InitializeResponse\"\x00\x12>\n\x07runLoop\x12\x17.NrpCore.RunLoopMessage\x1a\x18.NrpCore.RunLoopResponse\"\x00\x12\x44\n\x0frunUntilTimeout\x12\x15.NrpCore.EmptyMessage\x1a\x18.NrpCore.RunLoopResponse\"\x00\x12\x36\n\x08stopLoop\x12\x15.NrpCore.EmptyMessage\x1a\x11.NrpCore.Response\"\x00\x12\x38\n\x05reset\x12\x15.NrpCore.ResetMessage\x1a\x16.NrpCore.ResetResponse\"\x00\x12\x36\n\x08shutdown\x12\x15.NrpCore.EmptyMessage\x1a\x11.NrpCore.Response\"\x00\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'nrp_server_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _EMPTYMESSAGE._serialized_start=75
  _EMPTYMESSAGE._serialized_end=89
  _JSONMESSAGE._serialized_start=91
  _JSONMESSAGE._serialized_end=118
  _SIMSTATEMESSAGE._serialized_start=120
  _SIMSTATEMESSAGE._serialized_end=177
  _RESPONSE._serialized_start=179
  _RESPONSE._serialized_end=233
  _TRAJECTORYMESSAGE._serialized_start=235
  _TRAJECTORYMESSAGE._serialized_end=309
  _TRAJECTORY._serialized_start=312
  _TRAJECTORY._serialized_end=445
  _INITIALIZERESPONSE._serialized_start=447
  _INITIALIZERESPONSE._serialized_end=552
  _DATAPACKS._serialized_start=554
  _DATAPACKS._serialized_end=670
  _RUNLOOPRESPONSE._serialized_start=673
  _RUNLOOPRESPONSE._serialized_end=814
  _RUNLOOPMESSAGE._serialized_start=816
  _RUNLOOPMESSAGE._serialized_end=894
  _RESETMESSAGE._serialized_start=896
  _RESETMESSAGE._serialized_end=949
  _RESETRESPONSE._serialized_start=951
  _RESETRESPONSE._serialized_end=1051
  _NRPCORE._serialized_start=1054
  _NRPCORE._serialized_end=1435
# @@protoc_insertion_point(module_scope)
