# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class ProjectSupabase(pydantic.BaseModel):
    id: str
    project_name: str = pydantic.Field(alias="projectName")
    geometry: typing.Dict[str, typing.Any]
    created_at: str = pydantic.Field(alias="createdAt")
    updated_at: str = pydantic.Field(alias="updatedAt")
    user_id: str = pydantic.Field(alias="userId")
    area_hectares: typing.Optional[float] = pydantic.Field(alias="areaHectares")
    centroid_lat: typing.Optional[float] = pydantic.Field(alias="centroidLat")
    centroid_lon: typing.Optional[float] = pydantic.Field(alias="centroidLon")
    geometry_hash: typing.Optional[str]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
