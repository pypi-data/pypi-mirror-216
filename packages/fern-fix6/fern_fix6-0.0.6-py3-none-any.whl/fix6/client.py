# This file was auto-generated by Fern from our API Definition.

from .resources.admin.client import AdminClient, AsyncAdminClient
from .resources.atmospheric.client import AsyncAtmosphericClient, AtmosphericClient
from .resources.ghg.client import AsyncGhgClient, GhgClient
from .resources.healthcheck.client import AsyncHealthcheckClient, HealthcheckClient
from .resources.masks.client import AsyncMasksClient, MasksClient
from .resources.projects.client import AsyncProjectsClient, ProjectsClient
from .resources.satellite.client import AsyncSatelliteClient, SatelliteClient
from .resources.soil.client import AsyncSoilClient, SoilClient
from .resources.weather.client import AsyncWeatherClient, WeatherClient


class Fix6:
    def __init__(self, *, environment: str):
        self._environment = environment
        self.healthcheck = HealthcheckClient(environment=self._environment)
        self.admin = AdminClient(environment=self._environment)
        self.projects = ProjectsClient(environment=self._environment)
        self.weather = WeatherClient(environment=self._environment)
        self.atmospheric = AtmosphericClient(environment=self._environment)
        self.satellite = SatelliteClient(environment=self._environment)
        self.soil = SoilClient(environment=self._environment)
        self.masks = MasksClient(environment=self._environment)
        self.ghg = GhgClient(environment=self._environment)


class AsyncFix6:
    def __init__(self, *, environment: str):
        self._environment = environment
        self.healthcheck = AsyncHealthcheckClient(environment=self._environment)
        self.admin = AsyncAdminClient(environment=self._environment)
        self.projects = AsyncProjectsClient(environment=self._environment)
        self.weather = AsyncWeatherClient(environment=self._environment)
        self.atmospheric = AsyncAtmosphericClient(environment=self._environment)
        self.satellite = AsyncSatelliteClient(environment=self._environment)
        self.soil = AsyncSoilClient(environment=self._environment)
        self.masks = AsyncMasksClient(environment=self._environment)
        self.ghg = AsyncGhgClient(environment=self._environment)
