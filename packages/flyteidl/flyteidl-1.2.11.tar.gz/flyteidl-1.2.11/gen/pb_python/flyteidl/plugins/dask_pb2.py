# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flyteidl/plugins/dask.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from flyteidl.core import tasks_pb2 as flyteidl_dot_core_dot_tasks__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='flyteidl/plugins/dask.proto',
  package='flyteidl.plugins',
  syntax='proto3',
  serialized_options=_b('Z7github.com/flyteorg/flyteidl/gen/pb-go/flyteidl/plugins'),
  serialized_pb=_b('\n\x1b\x66lyteidl/plugins/dask.proto\x12\x10\x66lyteidl.plugins\x1a\x19\x66lyteidl/core/tasks.proto\"q\n\x07\x44\x61skJob\x12\x32\n\tscheduler\x18\x01 \x01(\x0b\x32\x1f.flyteidl.plugins.DaskScheduler\x12\x32\n\x07workers\x18\x02 \x01(\x0b\x32!.flyteidl.plugins.DaskWorkerGroup\"K\n\rDaskScheduler\x12\r\n\x05image\x18\x01 \x01(\t\x12+\n\tresources\x18\x02 \x01(\x0b\x32\x18.flyteidl.core.Resources\"h\n\x0f\x44\x61skWorkerGroup\x12\x19\n\x11number_of_workers\x18\x01 \x01(\r\x12\r\n\x05image\x18\x02 \x01(\t\x12+\n\tresources\x18\x03 \x01(\x0b\x32\x18.flyteidl.core.ResourcesB9Z7github.com/flyteorg/flyteidl/gen/pb-go/flyteidl/pluginsb\x06proto3')
  ,
  dependencies=[flyteidl_dot_core_dot_tasks__pb2.DESCRIPTOR,])




_DASKJOB = _descriptor.Descriptor(
  name='DaskJob',
  full_name='flyteidl.plugins.DaskJob',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scheduler', full_name='flyteidl.plugins.DaskJob.scheduler', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='workers', full_name='flyteidl.plugins.DaskJob.workers', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=76,
  serialized_end=189,
)


_DASKSCHEDULER = _descriptor.Descriptor(
  name='DaskScheduler',
  full_name='flyteidl.plugins.DaskScheduler',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='image', full_name='flyteidl.plugins.DaskScheduler.image', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='resources', full_name='flyteidl.plugins.DaskScheduler.resources', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=191,
  serialized_end=266,
)


_DASKWORKERGROUP = _descriptor.Descriptor(
  name='DaskWorkerGroup',
  full_name='flyteidl.plugins.DaskWorkerGroup',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='number_of_workers', full_name='flyteidl.plugins.DaskWorkerGroup.number_of_workers', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='image', full_name='flyteidl.plugins.DaskWorkerGroup.image', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='resources', full_name='flyteidl.plugins.DaskWorkerGroup.resources', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=268,
  serialized_end=372,
)

_DASKJOB.fields_by_name['scheduler'].message_type = _DASKSCHEDULER
_DASKJOB.fields_by_name['workers'].message_type = _DASKWORKERGROUP
_DASKSCHEDULER.fields_by_name['resources'].message_type = flyteidl_dot_core_dot_tasks__pb2._RESOURCES
_DASKWORKERGROUP.fields_by_name['resources'].message_type = flyteidl_dot_core_dot_tasks__pb2._RESOURCES
DESCRIPTOR.message_types_by_name['DaskJob'] = _DASKJOB
DESCRIPTOR.message_types_by_name['DaskScheduler'] = _DASKSCHEDULER
DESCRIPTOR.message_types_by_name['DaskWorkerGroup'] = _DASKWORKERGROUP
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

DaskJob = _reflection.GeneratedProtocolMessageType('DaskJob', (_message.Message,), dict(
  DESCRIPTOR = _DASKJOB,
  __module__ = 'flyteidl.plugins.dask_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.plugins.DaskJob)
  ))
_sym_db.RegisterMessage(DaskJob)

DaskScheduler = _reflection.GeneratedProtocolMessageType('DaskScheduler', (_message.Message,), dict(
  DESCRIPTOR = _DASKSCHEDULER,
  __module__ = 'flyteidl.plugins.dask_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.plugins.DaskScheduler)
  ))
_sym_db.RegisterMessage(DaskScheduler)

DaskWorkerGroup = _reflection.GeneratedProtocolMessageType('DaskWorkerGroup', (_message.Message,), dict(
  DESCRIPTOR = _DASKWORKERGROUP,
  __module__ = 'flyteidl.plugins.dask_pb2'
  # @@protoc_insertion_point(class_scope:flyteidl.plugins.DaskWorkerGroup)
  ))
_sym_db.RegisterMessage(DaskWorkerGroup)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
